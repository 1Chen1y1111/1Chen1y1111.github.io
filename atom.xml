<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CavsCy&#39;s Blog</title>
  
  <subtitle>改变的确很难,但结果值得冒险</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-01-15T08:07:02.690Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>1Chen1y1111</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深入Grid布局</title>
    <link href="http://example.com/2024/01/15/%E6%B7%B1%E5%85%A5Grid%E5%B8%83%E5%B1%80/"/>
    <id>http://example.com/2024/01/15/%E6%B7%B1%E5%85%A5Grid%E5%B8%83%E5%B1%80/</id>
    <published>2024-01-15T07:47:52.000Z</published>
    <updated>2024-01-15T08:07:02.690Z</updated>
    
    <content type="html"><![CDATA[<h5 id="属性">属性</h5><ul><li><code>display</code><ul><li><code>gird</code> | <code>inline-grid</code></li></ul></li><li><code>grid-template-columns</code><ul><li>列宽</li><li><code>grid-template-colums:100px 200px 300px</code><ul><li>声明了 3 列，分别为 100px、200px、300px</li></ul></li></ul></li><li><code>grid-template-rows</code> 行高<ul><li><code>grid-template-row:100px 200px</code><ul><li>声明了两行，分别为 100px 200px</li></ul></li></ul></li></ul><span id="more"></span><ul><li><code>repeat()</code>函数<ul><li><code>grid-template-columns:repeat(3,100px)</code> 等价于 <code>grid-template-columns:100px 100px 100px</code></li><li><code>auto-fill</code><ul><li>自动填充</li><li>让一行或者是一列中尽可能的容纳更多的单元格</li><li><code>grid-template-columns:repeat(auto-fill,100px)</code></li></ul></li></ul></li><li><code>fr</code>关键字<ul><li>fr 单位代表网格容器中可用空间的一等份</li><li><code>grid-template-columns:200px 1fr 2fr</code><ul><li>表示第一个列宽设置为 200px，后面剩余的宽度分为两部分，宽度分别为剩余宽度的 1/3 和 2/3</li></ul></li></ul></li><li><code>minmax()</code>函数<ul><li>minmax 函数产生一个长度范围</li><li><code>grid-template-columns:1fr 2fr minmax(300px,2fr)</code><ul><li>表示第三个列宽最少是 300px，最大不能超过第一第二列宽的两倍</li></ul></li></ul></li><li><code>auto</code>关键字<ul><li><code>grid-template-columns：100px auto 100px</code><ul><li>表示第一列和第三列宽为 100px 吗，中间自适应</li></ul></li></ul></li><li><code>grid-row-gap</code> <code>grid-column-gap</code> <code>grid-gap</code><ul><li>分别设置行间距和列间距</li><li><code>grid-gap：10px 20px</code><ul><li>行间距 10px，列间距 20px</li></ul></li></ul></li><li><code>grid-template-areas</code><ul><li>用于指定区域，一个区域由一个或者多个单元格组成</li><li>与<code>grid-area</code>搭配使用<ul><li>指定项目放在哪一个区域</li></ul></li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-gap</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">120px</span> <span class="number">120px</span> <span class="number">120px</span>;</span><br><span class="line">  <span class="comment">/* 分成6个单元格，上下各3个，.代表空的单元格，header元素占两份 */</span></span><br><span class="line">  <span class="attribute">grid-template-areas</span>:</span><br><span class="line">    <span class="string">&quot;. header header&quot;</span></span><br><span class="line">    <span class="string">&quot;sidebar content content&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: sidebar;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: header;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>grid-auto-flow</code><ul><li>控制自动布局算法怎样运作，默认的放置顺序是“先行后列”</li></ul></li><li><code>justify-items</code> <code>align-items</code> <code>place-items</code><ul><li><code>justify-items</code>属性设置单元格内容的水平位置（左中右）<ul><li>start | end | center |stretch（拉伸）</li></ul></li><li><code>align-items</code>属性设置单元格的垂直位置（上中下）<ul><li>start | end | center |stretch（拉伸）</li></ul></li></ul></li><li><code>justify-content</code> <code>align-content</code> <code>place-content</code><ul><li><code>justify-content</code>属性设置整个内容区域在容器里面的水平位置（左中右）<ul><li>start | end | center | strech | space-around |space-between | space-evenly</li></ul></li><li><code>align-content</code>属性设置整个内容区域在容器里面的垂直位置（上中下）<ul><li>start | end | center | strech | space-around |space-between | space-evenly</li></ul></li></ul></li><li><code>grid-auto-columns</code> <code>grid-auto-rows</code><ul><li>隐式和显式网格<ul><li>显式网格包含了你在<code>grid-template-columns</code>和<code>grid-template-rows</code>属性中定义的行和列，如果在网格定义之外又放了一些东西，或者因为内容的数量而需要更多的网格轨道的时候，网格会在隐式网格中创建行和列</li><li>假如有多余的网格（隐式网格），那么它的行高和列宽可以根据<code>grid-auto-columns</code>属性和<code>grid-auto-rows</code>属性设置，写法一致</li></ul></li></ul></li><li><code>grid-column-start</code> <code>grid-column-end</code> <code>grid-row-start</code> <code>grid-row-end</code><ul><li>可以指定网格项目所在的四个边框，分别定位在哪根网格线，从而指定项目的位置</li><li><code>grid-column-start</code> 左边框所在的垂直网格线</li><li><code>grid-column-end</code>右边框所在的垂直网格线</li><li><code>grid-row-start</code> 上边框所在的垂直网格线</li><li><code>grid-row-start</code> 下边框所在的垂直网格线</li></ul></li><li><code>justify-self</code> <code>align-self</code> <code>place-self</code> （单个单元格）<ul><li><code>justify-self</code> 属性设置单元格内容的水平位置（左中右）</li><li><code>align-self</code> 属性设置单元格内容的垂直位置（上中下）</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;属性&quot;&gt;属性&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;display&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gird&lt;/code&gt; | &lt;code&gt;inline-grid&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid-template-columns&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;列宽&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid-template-colums:100px 200px 300px&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;声明了 3 列，分别为 100px、200px、300px&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grid-template-rows&lt;/code&gt; 行高
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grid-template-row:100px 200px&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;声明了两行，分别为 100px 200px&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="CSS" scheme="http://example.com/categories/CSS/"/>
    
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>React(四)</title>
    <link href="http://example.com/2024/01/14/React1-4/"/>
    <id>http://example.com/2024/01/14/React1-4/</id>
    <published>2024-01-14T15:53:13.000Z</published>
    <updated>2024-01-14T15:55:09.894Z</updated>
    
    <content type="html"><![CDATA[<h4 id="URL的hash">URL的hash</h4><ul><li>前端路由是如何做到URL和内容进行映射的呢？<ul><li>监听URL的改变</li></ul></li><li>URL的hash<ul><li>URL的hash也就是锚点（#），本质上是改变window.location的href属性</li><li>我们可以通过直接赋值location.hash来改变href，但是页面不发生刷新</li></ul></li><li><code>hashchange</code></li><li>hash的优势就是兼容性更好，在老版本IE中都可以运行,但是缺陷是有一个#，显得不像一个真实的路径</li></ul><span id="more"></span><p><strong>HTML5的History</strong></p><ul><li>history接口是HTML5新增的，它有六种模式改变URL而不刷新页面<ul><li>replaceState：替换原来的路径</li><li>pushState：使用新的路径</li><li>popState：路径的回退</li><li>go：向前或者向后改变路径</li><li>forward：向前改变路径</li><li>back：向后改变路径</li></ul></li></ul><h4 id="react-router">react-router</h4><ul><li><code>react-router-dom</code><ul><li>提供了一些组件<ul><li>BrowserRouter</li><li>HashRouter</li></ul></li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root.<span class="title function_">render</span>(</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">HashRouter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">HashRouter</span>&gt;</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>路由映射配置<ul><li>Routes：包裹所有的Route，在其中匹配一个路由<ul><li>Router5.x使用的是Switch组件</li></ul></li><li>Route：Route用于路径的匹配<ul><li>path属性：用于设置匹配到的路径</li><li>element属性：设置匹配到路径后，渲染的组件<ul><li>Route5.x使用的是component属性</li></ul></li><li>exact：精准匹配，只有精准匹配到完全一直的路径，才会渲染对应的组件<ul><li>Router6.x不再支持该属性</li></ul></li></ul></li></ul></li><li>路由配置和跳转<ul><li>Link和NavLink<ul><li>通常路径的跳转是使用Link组件，最终会被渲染成a元素</li><li>NavLink是在Link基础之上增加了一些样式属性</li><li>to属性：Link中用于设置跳转的路径</li></ul></li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Routes</span>&gt;</span><br><span class="line">    <span class="comment">// 重定向</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Navigate</span> <span class="attr">to</span>=<span class="string">&#x27;/home&#x27;</span>/&gt;</span>&#125;/&gt;</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/home&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Home</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/about&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">About</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/custom/:id&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Custom</span> /&gt;</span>&#125; /&gt;</span> <span class="comment">// 动态路由</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;*&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NotFound</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line">&lt;/<span class="title class_">Routes</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>Navigate导航<ul><li>Navigate用于路由的重定向，当这个组件出现时，就会执行跳转到对应的to路径中</li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123; !isLogin </span><br><span class="line">    ? <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;e</span> =&gt;</span> this.state.isLogin = true&#125;&gt;登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    : <span class="language-xml"><span class="tag">&lt;<span class="name">Navigate</span> <span class="attr">to</span>=<span class="string">&#x27;/Dashboard&#x27;</span>/&gt;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>路由的嵌套</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Route</span> path=<span class="string">&quot;/home&quot;</span> element=&#123;<span class="language-xml"><span class="tag">&lt;<span class="name">Home</span> /&gt;</span></span>&#125;&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/home/homeOne&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">HomeOne</span> /&gt;</span>&#125;&gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/home/homeTwo&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">HomeTwo</span> /&gt;</span>&#125;&gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line">&lt;/<span class="title class_">Route</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// home.jsx 用于在父路由元素中作为子路由的占位元素</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Outlet</span>/&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>高阶组件：函数</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">withRouter</span>(<span class="params">WrapperComponent</span>)&#123;</span><br><span class="line">    <span class="comment">// 类组件拿不到router信息</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">props</span>) &#123;</span><br><span class="line">        <span class="comment">// 导航</span></span><br><span class="line">     <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 动态路由的参数</span></span><br><span class="line">        <span class="keyword">const</span> params = <span class="title function_">useParams</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 查询字符串的参数</span></span><br><span class="line">        <span class="keyword">const</span> location = <span class="title function_">useLocation</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//Or</span></span><br><span class="line">        <span class="keyword">const</span> [searchParams,setSearchParams] = <span class="title function_">useSearchParams</span>()</span><br><span class="line">        <span class="keyword">const</span> query = <span class="title class_">Object</span>.<span class="title function_">fromEntries</span>(searchParams.<span class="title function_">entries</span>())</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">const</span> router = &#123; navigate, params, useLocation, query &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">WrapperComponent</span> &#123;<span class="attr">...props</span>&#125; <span class="attr">router</span>=<span class="string">&#123;router&#125;</span> /&gt;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>路由配置</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        <span class="attr">element</span>:<span class="language-xml"><span class="tag">&lt;<span class="name">Navigate</span> <span class="attr">to</span>=<span class="string">&#x27;/home&#x27;</span> /&gt;</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">        <span class="attr">element</span>:<span class="language-xml"><span class="tag">&lt;<span class="name">Home</span>/&gt;</span></span>,</span><br><span class="line">        <span class="attr">children</span>:[</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">                <span class="attr">element</span>:<span class="language-xml"><span class="tag">&lt;<span class="name">Navigate</span> <span class="attr">to</span>=<span class="string">&#x27;/home/homeOne&#x27;</span> /&gt;</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">path</span>:<span class="string">&#x27;/home/homeTwo&#x27;</span>,</span><br><span class="line">                <span class="attr">element</span>:<span class="language-xml"><span class="tag">&lt;<span class="name">HomeTwo</span>/&gt;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">        <span class="attr">element</span>:<span class="language-xml"><span class="tag">&lt;<span class="name">About</span>/&gt;</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">        <span class="attr">element</span>:<span class="language-xml"><span class="tag">&lt;<span class="name">NotFound</span>/&gt;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> routes</span><br><span class="line"></span><br><span class="line"><span class="comment">// App.jsx</span></span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;<span class="title function_">useRoutes</span>(routes)&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>路由懒加载</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">About</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">()=&gt;</span><span class="title function_">import</span>(<span class="string">&quot;../pages/About&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">     <span class="attr">element</span>:<span class="language-xml"><span class="tag">&lt;<span class="name">About</span>/&gt;</span></span></span><br><span class="line"> &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">root.<span class="title function_">render</span>(</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">HashRouter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Suspense</span> <span class="attr">fallBack</span>=<span class="string">&#123;</span>&lt;<span class="attr">h1</span>&gt;</span>Loading...<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">App</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">HashRouter</span>&gt;</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;URL的hash&quot;&gt;URL的hash&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;前端路由是如何做到URL和内容进行映射的呢？
&lt;ul&gt;
&lt;li&gt;监听URL的改变&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;URL的hash
&lt;ul&gt;
&lt;li&gt;URL的hash也就是锚点（#），本质上是改变window.location的href属性&lt;/li&gt;
&lt;li&gt;我们可以通过直接赋值location.hash来改变href，但是页面不发生刷新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hashchange&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;hash的优势就是兼容性更好，在老版本IE中都可以运行,但是缺陷是有一个#，显得不像一个真实的路径&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="React" scheme="http://example.com/categories/React/"/>
    
    
    <category term="React" scheme="http://example.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React(三)</title>
    <link href="http://example.com/2024/01/14/React1-3/"/>
    <id>http://example.com/2024/01/14/React1-3/</id>
    <published>2024-01-14T15:49:04.000Z</published>
    <updated>2024-01-14T15:51:14.768Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Redux">Redux</h5><ul><li><p>纯函数</p><ul><li>函数在相同的输入值时，产生相同的输出</li><li>函数的输出和输入值以外的其他隐藏信息或状态无关，也由I/O设备产生的外部输出无关</li><li>函数不能有语义上可观察的函数副作用，诸如“触发事件”，使输出设备输出，或更改输出值以外物件的内容等</li><li>也就是<ul><li>确定的输入，一定会产生确定的输出</li><li>函数在执行过程中，不能产生副作用</li></ul></li></ul></li></ul><span id="more"></span><ul><li><p>文件构成</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/index.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; createStore &#125; = <span class="built_in">require</span>(<span class="string">&quot;redux&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; reducer &#125; = <span class="built_in">require</span>(<span class="string">&quot;./reducer&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(reducer);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = store;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/reducer.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">CHANGE_NAME</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;./store/constants&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化数据</span></span><br><span class="line"><span class="keyword">const</span> initialState = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;cy&quot;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义reducer函数：纯函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">reducer</span>(<span class="params">state = initialState, action</span>) &#123;</span><br><span class="line">  <span class="keyword">switch</span> (action.<span class="property">type</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="attr">CHANGE_NAME</span>:</span><br><span class="line">      <span class="keyword">return</span> &#123; ...state, <span class="attr">name</span>: action.<span class="property">name</span> &#125;;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">export</span> = &#123;</span><br><span class="line">  reducer,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/actionCreators.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">CHANGE_NAME</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;./store/constants&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// actionCreators:创建action</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">changeNameAction</span> = (<span class="params">name</span>) =&gt; (&#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="variable constant_">CHANGE_NAME</span>,</span><br><span class="line">  name,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  changeNameAction,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/constants.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">CHANGE_NAME</span> = <span class="string">&quot;change_name&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="variable constant_">CHANGE_NAME</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>三大原则</p><ul><li>单一数据源<ul><li>整个应用程序的state被存储在一颗object tree中，并且这个object tree只存储在一个store中<ul><li>可以创建多个store，但是并不利于数据的维护</li></ul></li><li>单一的数据源可以让整个应用程序的state变得方便维护、追踪、修改</li></ul></li><li>state是只读的<ul><li>唯一修改state的方法一定是触发action，不要试图在其他地方通过任何的方法来修改state</li><li>确保view或者网络请求都不能直接修改state，它们只能通过action来描述自己想要如何修改</li><li>保证所有的修改都被集中化处理，并且按照严格的顺序来执行，所有不需要担心race condition (竞态) 的问题</li></ul></li><li>使用纯函数来执行修改<ul><li>通过reducer将旧state和actions联系在一起，并且返回一个新的state</li><li>随着应用程序的复杂度增加，我们可以将reducer拆分成多个小的reducer，分别操作不同state tree 的一部分</li><li>但是所有的reducer都应该是纯函数，不能产生任何的副作用</li></ul></li></ul></li><li><p>node中对ES6模块化的支持</p><ul><li>从node v13.2.0开始，node才对ES6模块化提供了支持</li><li>node v13.2.0之前，需要进行如下操作：<ul><li>package.json中添加属性：“type&quot;:“module”;</li><li>在执行命令后添加如下选项： node --experimental-modules src/index.js</li></ul></li><li>node v13.2.0之后,只需要<ul><li>package.json中添加属性：”type&quot;:“module”</li></ul></li></ul></li><li><p>Redux Toolkit</p><ul><li>configureStore：包装createStore以提供简化的配置选项和良好的默认值。它可以自动组合你的slice reducer，添加你提供的任何Redux中间件，redux-thunk默认包含，并启用Redux DevTools Extension</li><li>createSlice：接收一个reducer函数的对象、切片名称和初始状态值，并自动生成切片reducer，并带有相应的actions</li><li>createAsyncThunk：接受一个动作类型字符串和一个返回承诺的函数，并生成一个pending/fulfilled/rejected基于该承诺分派动作类型的thunk<ul><li>createAsyncThunk创建出来的action被dispatch的时候，会有三种状态<ul><li>pending：action被发出，但是还没有最终的结果</li><li>fulfilled：获取到最终的结果</li><li>rejected：执行过程中有错误或者抛出了异常</li></ul></li></ul></li></ul></li><li><p>自定义connect函数</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hoc/index.js</span></span><br><span class="line"><span class="keyword">export</span> &#123; storeContext &#125; <span class="keyword">from</span> <span class="string">&quot;./storeContext&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">&quot;./connect&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// hoc connect.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PureComponent</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; storeContext &#125; <span class="keyword">from</span> <span class="string">&quot;./storeContext&quot;</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Fn</span>&#125; <span class="variable">mapStateToProps</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Fn</span>&#125; <span class="variable">mapDispatchToProps</span></span></span><br><span class="line"><span class="comment"> * return Fn</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">connect</span>(<span class="params">mapStateToProps, mapDispatchToProps</span>) &#123;</span><br><span class="line">  <span class="comment">// 返回的函数是个高阶函数</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">WrapperComponent</span>) &#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">NewComponent</span> <span class="keyword">extends</span> <span class="title class_ inherited__">PureComponent</span> &#123;</span><br><span class="line">      <span class="title function_">constructor</span>(<span class="params">props, context</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(props);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">state</span> = <span class="title function_">mapStateToProps</span>(context.<span class="title function_">getState</span>());</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">unsubscribe</span> = <span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">subscribe</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">setState</span>(<span class="title function_">mapStateToProps</span>(<span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">getState</span>()));</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="title function_">componentWillUnmount</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">unsubscribe</span>();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> stateObj = <span class="title function_">mapStateToProps</span>(<span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">getState</span>());</span><br><span class="line">        <span class="keyword">const</span> dispatchObj = <span class="title function_">mapDispatchToProps</span>(<span class="variable language_">this</span>.<span class="property">context</span>.<span class="property">dispatch</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">          <span class="language-xml"><span class="tag">&lt;<span class="name">WrapperComponent</span> &#123;<span class="attr">...this.props</span>&#125; &#123;<span class="attr">...stateObj</span>&#125; &#123;<span class="attr">...dispatchObj</span>&#125; /&gt;</span></span></span><br><span class="line">        );</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">NewComponent</span>.<span class="property">contextType</span> = storeContext;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">NewComponent</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// hoc/storeContext.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createContext &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> storeContext = <span class="title function_">createContext</span>();</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">App</span>.<span class="property">jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&quot;react-dom/client&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Provider</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; storeContext &#125; <span class="keyword">from</span> <span class="string">&quot;./hoc/storeContext.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store/index.js&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> root = <span class="title class_">ReactDOM</span>.<span class="title function_">createRoot</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;root&quot;</span>));</span><br><span class="line">root.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Provider</span> <span class="attr">store</span>=<span class="string">&#123;store&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">storeContext.Provider</span> <span class="attr">value</span>=<span class="string">&#123;store&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">storeContext.Provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>自定义redux-thunk</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">thunk</span>(<span class="params">store</span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> next = store.<span class="property">dispatch</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">dispatchThunk</span>(<span class="params">action</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> action === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">            <span class="title function_">action</span>(store.<span class="property">dispatch</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="title function_">next</span>(action)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    store.<span class="property">dispatch</span> = dispatchThunk</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">thunk</span>(store)</span><br></pre></td></tr></table></figure><p><strong>合并中间件</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">applyMiddleware</span>(<span class="params">store,middlewares</span>) &#123;</span><br><span class="line"> middlewares = middlewares.<span class="title function_">slice</span>()</span><br><span class="line">    </span><br><span class="line">    middlewares.<span class="title function_">forEach</span>(<span class="function"><span class="params">middleware</span> =&gt;</span> &#123;</span><br><span class="line">        store.<span class="property">dispatch</span> = <span class="title function_">middleware</span>(store)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">applyMiddleware</span>(store,[patchLogging,patchThunk])</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;Redux&quot;&gt;Redux&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;纯函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;函数在相同的输入值时，产生相同的输出&lt;/li&gt;
&lt;li&gt;函数的输出和输入值以外的其他隐藏信息或状态无关，也由I/O设备产生的外部输出无关&lt;/li&gt;
&lt;li&gt;函数不能有语义上可观察的函数副作用，诸如“触发事件”，使输出设备输出，或更改输出值以外物件的内容等&lt;/li&gt;
&lt;li&gt;也就是
&lt;ul&gt;
&lt;li&gt;确定的输入，一定会产生确定的输出&lt;/li&gt;
&lt;li&gt;函数在执行过程中，不能产生副作用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="React" scheme="http://example.com/categories/React/"/>
    
    
    <category term="React" scheme="http://example.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React(二)</title>
    <link href="http://example.com/2023/11/27/React1-2/"/>
    <id>http://example.com/2023/11/27/React1-2/</id>
    <published>2023-11-26T17:32:56.000Z</published>
    <updated>2023-11-26T17:34:11.576Z</updated>
    
    <content type="html"><![CDATA[<h5 id="setState其他用法">setState其他用法</h5><ul><li><code>setState(&#123;&#125;)</code></li><li><code>setState((state,props)=&gt; &#123; return &#123;&#125; &#125;)</code></li><li><code>setState(updater,callback)</code></li></ul><span id="more"></span><h5 id="React为什么使用setState">React为什么使用setState</h5><ul><li><p>React并没有实现类似于Vue2中的Object.defineProperty或者Vue3中的Proxy的方式来监听数据的变化</p></li><li><p>必须通过setState来告知React数据已经发生变化</p></li><li><p>setState方法是从React.Component中继承</p></li><li><p>异步调用</p><ul><li>批量更新，提升性能</li></ul></li><li><p>本次更新会加入队列中queue</p></li><li><p>两个优势</p><ul><li>多个updater放在同一次更新中，执行一次render函数，提高性能</li><li>保证在state没有被更新的时候，state、props保持一致</li></ul></li><li><p>setState一定是异步的吗？</p><ul><li><p>在react18之前</p><ul><li>setTimeout/Promise.then回调/原生DOM事件回调中是同步的</li></ul></li><li><p>在react18开始</p><ul><li>setTimeout/Promise.then回调/原生DOM事件回调中也变成批量处理</li><li>flushSync( ()=&gt; {} ) 强制 React 刷新任何挂起的工作并同步更新 DOM</li></ul></li></ul></li></ul><h5 id="React的更新流程">React的更新流程</h5><ul><li>props、state发生改变</li><li>render函数重新执行</li><li>生成新的DOM树</li><li>新旧DOM数进行diff</li><li>计算出差异进行更新</li><li>更新到真实的DOM</li></ul><h5 id="Render函数被调用">Render函数被调用</h5><ul><li>render函数的优化<ul><li>shouldComponentUpdate（SCU）<ul><li>参数1：nextProps</li><li>参数2：nextState</li><li>返回true 调用当前组件的render函数、默认返回true</li></ul></li></ul></li><li>PureComponent<ul><li>类组件继承</li><li>自动对state、props进行判断修改</li><li>浅层比较 <code>shallowEqual</code></li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>,&#123; <span class="title class_">PureComponent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Chidlren</span> <span class="keyword">extends</span> <span class="title class_ inherited__">PureComponent</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">state</span> = &#123;</span><br><span class="line">            <span class="attr">str</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">         hello,PureComponent</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>函数组件没有声明周期<ul><li>memo 作用等同于 PureComponent</li></ul></li><li>在props没有改变时，不希望重新渲染期DOM树结构</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; memo &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Children</span> = <span class="title function_">memo</span>(<span class="keyword">function</span>(<span class="params">props</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;&gt;</span>hello,memo<span class="tag">&lt;/&gt;</span></span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="state应该是不可变的">state应该是不可变的</h5><ul><li>修改state中的某一个数据（引用类型）<ul><li>先拷贝其数据，修改拷贝对象，设置新对象</li></ul></li></ul><h5 id="ref获取DOM">ref获取DOM</h5><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 三种获取DOM的方法</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; <span class="title class_">PureComponent</span>, createRef &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Children</span> <span class="keyword">extends</span> <span class="title class_ inherited__">PureComponent</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>()</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;</span><br><span class="line">      <span class="attr">divRef1</span>: <span class="variable language_">this</span>.<span class="property">ref</span>.<span class="property">divRef1</span>,  <span class="comment">// 已废弃</span></span><br><span class="line">      <span class="attr">divRef2</span>: <span class="title function_">createRef</span>(), <span class="comment">// this.state.divRef2.current</span></span><br><span class="line">      <span class="attr">divRef3</span>: <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&#x27;divRef1&#x27;</span>&gt;</span>hello,ref1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&#123;this.state.divRef2&#125;</span>&gt;</span>hello,ref2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&#123;el</span> =&gt;</span> this.state.divRef3 = el&#125;&gt;hello,ref3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Children</span></span><br></pre></td></tr></table></figure><ul><li>ref不能应用于函数式组件<ul><li>因为函数式组件没有实例，所以不能获取到对应的组件对象</li><li>可以通过forwardRef</li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 转发</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Home</span> = <span class="title function_">forwarRef</span>(<span class="keyword">function</span>(<span class="params">props,ref</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">h2</span> <span class="attr">ref</span>=<span class="string">&#123;ref&#125;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="受控组件">受控组件</h5><ul><li>被React以state方式控制取值的表单输入元素就叫做受控组件</li></ul><h5 id="非受控组件">非受控组件</h5><ul><li>表单数据交给DOM节点来处理</li><li>ref获取元素</li></ul><h5 id="高阶组件">高阶组件</h5><ul><li>HOC Higher-Order Components</li><li>参数为组件，返回值为新组件的函数</li><li>props增强</li><li>context增强</li></ul><h5 id="Portals的使用">Portals的使用</h5><ul><li>如果希望渲染的内容独立于父组件，甚至是独立于当前挂载到的DOM元素中</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createPortal &#125; <span class="keyword">from</span> <span class="string">&quot;react-dom&quot;</span>;</span><br><span class="line">        </span><br><span class="line"><span class="title function_">createPortal</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Children4</span>/&gt;</span></span>,<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#cy&#x27;</span>))</span><br></pre></td></tr></table></figure><h5 id="fragement">fragement</h5><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Fragement</span>&gt;&lt;<span class="regexp">/Fragement&gt; /</span><span class="regexp">/ 需要绑定key的时候不能省</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;&gt;&lt;/</span>&gt;</span><br></pre></td></tr></table></figure><h5 id="StrictMode">StrictMode</h5><ul><li>识别不安全的声明周期</li><li>使用过时的ref API</li><li>检查意外的副作用<ul><li>这个组件的constructor会被调用两次</li></ul></li><li>使用废弃的findDOMNode方法</li><li>检测过时的context API</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">StrictMode</span>&gt;</span><br><span class="line"> <span class="language-xml"><span class="tag">&lt;<span class="name">App</span>/&gt;</span></span></span><br><span class="line">&lt;/<span class="title class_">StrictMode</span>&gt;</span><br></pre></td></tr></table></figure><h5 id="过渡动画">过渡动画</h5><ul><li>react-transition-group</li><li>CSSTransition<ul><li>-enter</li><li>-enter-done</li></ul></li><li>unmountOnExit={true}<ul><li>该组件会在执行退出动画结束后被移除掉</li></ul></li><li>当in为true时，触发进入状态</li><li>当in为false时，触发退出状态</li><li>timeout 移除时间</li><li>appear 首次出现添加动画<ul><li>-appear</li></ul></li><li>onEnter | onEntering | onEntered 钩子函数</li></ul><h5 id="css">css</h5><ul><li>内联样式<ul><li>style接收一个采用小驼峰命名属性的JS对象，而不是CSS字符串</li></ul></li><li>普通CSS<ul><li>没有单独作用域，样式冲突</li></ul></li><li>CSS Modules<ul><li>不能使用连接符  <code>appStyle.my-title</code></li><li>所有的className都必须使用{style.className}的形式来编写<ul><li>不方便动态修改某些样式，依然需要使用内联样式</li></ul></li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">App</span>.<span class="property">module</span>.<span class="property">css</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> appStyle <span class="keyword">from</span> <span class="string">&#x27;./App.module.css&#x27;</span></span><br><span class="line"></span><br><span class="line">&lt;div style=&#123;appStyle.<span class="property">title</span>&#125;&gt;hello&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>CSS -in-JS  第三方库<ul><li><p>styled-components</p></li><li><p>emotion-js/emotion</p></li><li><p>glamorous</p></li><li><p>classnames</p></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;setState其他用法&quot;&gt;setState其他用法&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setState(&amp;#123;&amp;#125;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setState((state,props)=&amp;gt; &amp;#123; return &amp;#123;&amp;#125; &amp;#125;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setState(updater,callback)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="React" scheme="http://example.com/categories/React/"/>
    
    
    <category term="React" scheme="http://example.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React(一)</title>
    <link href="http://example.com/2023/10/18/React1-1/"/>
    <id>http://example.com/2023/10/18/React1-1/</id>
    <published>2023-10-18T14:42:57.000Z</published>
    <updated>2023-10-18T14:44:41.294Z</updated>
    
    <content type="html"><![CDATA[<ul><li>JSX<ul><li>一种标签语法,JS进行的语法扩展 | 遵循JS 的命名规范,一般使用camelCase小驼峰</li><li>不是字符串、不是HTML标签</li><li>描述UI呈现与交互的直观的形式</li><li>生成React元素</li></ul></li></ul><span id="more"></span><ul><li>为什么React不把视图标记和逻辑分开<ul><li>渲染和UI标记是有逻辑耦合的</li><li>即使是这样的一个耦合，也能实现关注点分离</li></ul></li><li>JSX插值表达式<ul><li>表达式：一切有效的（符合JS变成逻辑的）表达式 { title }</li><li>JSX被编译以后 -&gt; React元素 -&gt; 普通的对象</li></ul></li><li>html中的div容器叫根节点<ul><li>根节点内的所有的内容都是由ReactDOM进行管理</li><li>一个React应用只有一个根节点</li><li>用ReactDOM.render方法将react元素渲染到根节点中</li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">ReactElement</span> - react元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">rootNode</span> - 根节点</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  rEl,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>基本的更新逻辑<ul><li>React元素是不可变的对象</li><li>immutable Object<ul><li>不能添加属性</li><li>不能修改属性</li><li>不能删除属性</li><li>不能修改属性的枚举、配置、可写<ul><li>enumerable、configurable、writable</li></ul></li></ul></li><li>ReactDOM.render会深度对比新旧元素的状态，只会做必要的真实DOM更新</li><li>虚拟DOM的对比<ul><li>渲染之前 -&gt; 每个React元素组成一个虚拟DOM的对象结构 -&gt; 渲染</li><li>更新之前 -&gt; 形成新的虚拟DOM的对象结构 -&gt; 对比新旧虚拟DOM节点 -&gt; 分析出两者的不同点 -&gt; 形成一个DOM更新的补丁 -&gt; 再操作真实DOM(更新真实DOM)</li></ul></li></ul></li><li>组件渲染<ul><li>ReactDOM.render的第一个参数一定是要react元素<ul><li>组件使用JSX语法</li><li>使用React.createElement将组件转换成react元素</li></ul></li><li>组件渲染过程<ul><li>React主动调用Test组件</li><li>将属性集合转化对象props =&gt; { title: ‘This is a Class Component’ } 等</li><li>将对象作为props传入组件</li><li>替换JSX中的props或者state中的变量</li><li>ReactDOM将最终的React元素通过一系列操作转换成真实DOM进行渲染</li></ul></li><li>组件调用规范<ul><li>视图标记HTML标签 <div></div></li><li>大驼峰写法作为一个React元素  <Test/></li><li>组件转换React元素 React.createElement()</li></ul></li></ul></li><li>组件<ul><li>在前端，组件视图的片段</li></ul></li><li>组合组件</li><li>属性props和数据/状态state 区别<ul><li>state =&gt; 数据池 { } 组件内部的管理数据的容器 | 组件内部可写可读</li><li>props =&gt; 属性池 { } 外部调用足迹爱你时传入的属性集合 | 组件内部可读不可写</li></ul></li><li>函数组件<ul><li>函数组件一定要是一个纯函数</li><li>纯函数能保证绝对的复用性</li><li>相同的入参保证返回相同的结果</li><li>纯函数不可以修改入参</li></ul></li><li>state使用注意事项<ul><li>必须使用setState方法来更改state</li><li>多个setState是会合并调用</li><li>避免直接依赖props和state更新数据 | 异步程序更新</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 同步</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">setState</span>(<span class="function">(<span class="params">state,props</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="comment">// state 上一个state</span></span><br><span class="line"><span class="comment">// props 此次更新时被使用的props</span></span><br><span class="line"><span class="attr">result</span>:state.<span class="property">result</span> + props.<span class="property">content</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>React的事件对象<ul><li>SynetheticBaseEvent  合成基础事件对象  React重新定义</li><li>这个SBE是遵守W3C事件对象的规范的，不存在任何的浏览器兼容性问题</li></ul></li><li>条件渲染<ul><li>判断表达式只有Boolean false，null,undefined 状态的时候才不会渲染</li><li>NaN 0 会渲染 count.toString()</li></ul></li><li>列表渲染<ul><li>不建议使用index作为key值（禁止)<ul><li>列表顺序会发生改变，元素增删的情况下</li><li>列表项增删或顺序改变了，index的对应项就会改变</li><li>key对应的项还是之前列表情况的对应元素值</li><li>会导致状态（arr）混乱，查找元素性能就会变差</li></ul></li><li>如果列表是静态不可操作的，可以选择index作为key，也不推荐<ul><li>影响列表以后维护扩展</li></ul></li><li>可以用数据的ID（有可能ID会变动）</li><li>使用动态生成一个静态ID （nanoid）</li></ul></li><li>受控组件<ul><li>state成为组件唯一数据源</li><li>控制组件操作并且同步state</li></ul></li><li>非受控组件<ul><li>组件数据不受控于state</li><li>使用React ref从DOM节点中获取组件数据</li></ul></li><li>状态提升<ul><li>两个组件（无父子关系）共享一个数据并且同步数据变化</li><li>类组件调用（实例化）的时候，组件内部的状态是唯一且独立的</li></ul></li><li>声明式编程</li></ul>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;JSX
&lt;ul&gt;
&lt;li&gt;一种标签语法,JS进行的语法扩展 | 遵循JS 的命名规范,一般使用camelCase小驼峰&lt;/li&gt;
&lt;li&gt;不是字符串、不是HTML标签&lt;/li&gt;
&lt;li&gt;描述UI呈现与交互的直观的形式&lt;/li&gt;
&lt;li&gt;生成React元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="React" scheme="http://example.com/categories/React/"/>
    
    
    <category term="React" scheme="http://example.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>前端埋点监控</title>
    <link href="http://example.com/2023/10/17/%E5%89%8D%E7%AB%AF%E5%9F%8B%E7%82%B9%E7%9B%91%E6%8E%A7/"/>
    <id>http://example.com/2023/10/17/%E5%89%8D%E7%AB%AF%E5%9F%8B%E7%82%B9%E7%9B%91%E6%8E%A7/</id>
    <published>2023-10-17T15:02:56.000Z</published>
    <updated>2023-10-17T13:04:23.254Z</updated>
    
    <content type="html"><![CDATA[<p>埋点</p><ul><li>针对特定用户行为或事件进行捕获、处理和发送的相关技术及其实施过程</li></ul><span id="more"></span><h5 id="基于Ajax的埋点上报">基于Ajax的埋点上报</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">buryingPointAjax</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 创建ajax请求</span></span><br><span class="line">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">        <span class="comment">// 定义请求接口</span></span><br><span class="line">        xhr.<span class="title function_">open</span>(<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;/buryingPoint&#x27;</span>,<span class="literal">true</span>)</span><br><span class="line">        <span class="comment">// 发送数据</span></span><br><span class="line">        xhr.<span class="title function_">send</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// use</span></span><br><span class="line"><span class="keyword">let</span> info = &#123;&#125;</span><br><span class="line"><span class="title function_">buryingPointAjax</span>(info)</span><br></pre></td></tr></table></figure><p>缺点</p><ul><li>埋点域名有可能不是当前域名，因此请求会存在跨域风险</li></ul><h5 id="基于img的埋点上报">基于<code>img</code>的埋点上报</h5><p>通过支持跨域的标签去实现数据上报功能</p><p><code>script</code>   <code>link</code></p><ul><li>script、link 进行埋点上报，需要挂载到页面上，但反复操作<code>dom</code>会造成性能开销，并且载入<code>js/css</code>资源会阻塞页面渲染，影响用户体验</li></ul><p><code>img</code></p><ul><li><code>img</code>加载并不需要挂载到页面上，通过new Image，设置<code>src</code>可以直接请求图片</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>()</span><br><span class="line">img.<span class="property">src</span> = <span class="string">&quot;https://www.baidu.com/assets/png/test.png&quot;</span></span><br></pre></td></tr></table></figure><ul><li><code>img </code>的加载不会阻塞<code>html</code>的解析，但<code>img</code>加载后并不渲染，它需要等待render tree生成完后才和render tree 一起渲染出来</li><li>通常埋点上报会使用<code>gif</code>图，<code>合法的GIF只需要43个字节</code></li></ul><h5 id="基于Navigator-sendBeacon-的埋点上报">基于<code>Navigator.sendBeacon </code>的埋点上报</h5><ul><li>它是目前通用的埋点上报方案，该方法可用于通过HTTP POST将少量数据异步传输到Web服务器</li><li><code>navigator.sendBeacon(url,data)</code><ul><li><code>url</code>：请求地址</li><li><code>data</code>：数据类型</li></ul></li><li><code>navigator.sendBeacon </code>如果成功进入浏览器的发送队列后，会返回true；如果受到队列总数、数据大小的限制后，会返回false。返回true后，只是表示进入了发送队列，浏览器会尽力保证发送成功，但是否成功了，不会再有任何返回值。</li><li><code>navigator.sendBeacon</code>是异步的，不会影响当前页到下一个页面的跳转速度，且不受同域限制。这个方法还是异步发出请求，但是请求与当前页面脱离关联，作为浏览器的任务，因此可以保证会把数据发出去，不拖延卸载流程</li></ul><h2 id="常见埋点行为">常见埋点行为</h2><h5 id="点击触发埋点">点击触发埋点</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">clickButton</span>(<span class="params">url,data</span>) &#123;</span><br><span class="line">    navigator.<span class="title function_">sendBeacon</span>(url, data)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="页面停留时间上报埋点">页面停留时间上报埋点</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 路由文件中，初始化一个startTime，当页面离开时，通过路由守卫计算停留时间</span></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> startTime = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line"><span class="keyword">let</span> currentTime = <span class="string">&#x27;&#x27;</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to,<span class="keyword">from</span>,next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(to) &#123;</span><br><span class="line">        currentTime = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">        <span class="comment">// 停留时间</span></span><br><span class="line">        stayTime = <span class="built_in">parseInt</span>(currentTime - startTime)</span><br><span class="line">        navigator.<span class="title function_">sendBeacon</span>(url,&#123;</span><br><span class="line">            <span class="attr">time</span>:stayTime</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="错误监听埋点">错误监听埋点</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue错误捕获</span></span><br><span class="line">app.<span class="property">config</span>.<span class="property">errorHandler</span> = <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">navigator.<span class="title function_">sendBeacon</span>(url,&#123;</span><br><span class="line">        <span class="attr">error</span>:error.<span class="property">message</span>,</span><br><span class="line">        <span class="attr">text</span>:<span class="string">&#x27;一些错误信息&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// js异常与静态资源加载异常</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;error&#x27;</span>,<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(error.<span class="property">message</span>) &#123;</span><br><span class="line">        navigator.<span class="title function_">sendBeacon</span>(url, &#123;</span><br><span class="line">        <span class="attr">error</span>:error.<span class="property">message</span>,</span><br><span class="line">        <span class="attr">text</span>:<span class="string">&#x27;一些JS错误信息&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        navigator.<span class="title function_">sendBeacon</span>(url, &#123;</span><br><span class="line">        <span class="attr">error</span>:error.<span class="property">message</span>,</span><br><span class="line">        <span class="attr">text</span>:<span class="string">&#x27;一些资源错误信息&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求错误捕获</span></span><br><span class="line">axios.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(response.<span class="property">code</span> == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(response)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(response)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 返回错误逻辑</span></span><br><span class="line">        navigator.<span class="title function_">sendBeacon</span>(url,&#123;</span><br><span class="line">        <span class="attr">error</span>:error.<span class="property">message</span>,</span><br><span class="line">        <span class="attr">text</span>:<span class="string">&#x27;一些请求错误信息&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 内容可见埋点</span></span><br><span class="line"><span class="comment">// 通过交叉观察器去监听当前元素是否出现在页面</span></span><br><span class="line"><span class="comment">// 可见性发生变化后的回调 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">callback</span>(<span class="params">data</span>) &#123; </span><br><span class="line">    navigator.<span class="title function_">sendBeacon</span>(url, &#123; <span class="attr">target</span>: data[<span class="number">0</span>].<span class="property">target</span>, <span class="attr">text</span>: <span class="string">&#x27;内容可见&#x27;</span> &#125;) </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 交叉观察器配置项 </span></span><br><span class="line"><span class="keyword">let</span> options = &#123;&#125;; </span><br><span class="line"><span class="comment">// 生成交叉观察器 </span></span><br><span class="line"><span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(callback); </span><br><span class="line"><span class="comment">// 获取目标节点 </span></span><br><span class="line"><span class="keyword">let</span> target = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;target&quot;</span>); </span><br><span class="line"><span class="comment">// 监听目标元素 </span></span><br><span class="line">observer.<span class="title function_">observe</span>(target);</span><br></pre></td></tr></table></figure><h2 id="方法封装">方法封装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ajax上报</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">sendAjax</span>(<span class="params">&#123; req:<span class="string">&#x27;&#x27;</span>,params &#125;: reportParams</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>&lt;bolean&gt;(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (req) &#123;</span><br><span class="line">            <span class="title function_">postInfoApi</span>(req, params)</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="title function_">resolve</span>(<span class="literal">true</span>))</span><br><span class="line">            .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> <span class="title function_">reject</span>(<span class="literal">false</span>))</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">reject</span>(<span class="literal">false</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// img 上报</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">sendImg</span>(<span class="params">&#123; img=<span class="string">&#x27;&#x27;</span>,params &#125;: reportParams</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>&lt;boolean&gt;(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> imageData = <span class="title function_">objectToQueryString</span>(params)</span><br><span class="line">        <span class="keyword">const</span> _img = <span class="keyword">new</span> <span class="title class_">Image</span>()</span><br><span class="line">        _img.<span class="property">onload</span> = <span class="function">() =&gt;</span> <span class="title function_">resolve</span>(<span class="literal">true</span>)</span><br><span class="line">        _img.<span class="property">onerror</span> = <span class="function">() =&gt;</span> <span class="title function_">reject</span>(<span class="literal">false</span>)</span><br><span class="line">        _img.<span class="property">src</span> = <span class="string">`<span class="subst">$&#123;img&#125;</span>?<span class="subst">$&#123;imageData&#125;</span>`</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// sendBeacon上报</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">sendBeacon</span>(<span class="params">&#123; url=<span class="string">&#x27;&#x27;</span>,params &#125;:reportParams</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(navigator?.<span class="property">sendBeacon</span> &amp;&amp; url) &#123;</span><br><span class="line">        <span class="keyword">const</span> isSuccess = <span class="keyword">await</span> navigator?.<span class="title function_">sendBeacon</span>(url, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(params))</span><br><span class="line">        <span class="keyword">if</span>(!isSuccess) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 最终导出</span></span><br><span class="line"><span class="comment">// 基础上报函数</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">reportEvent</span>(<span class="params">params: reportParams, reportType:string[] = [IMG, BEACON, AJAX]</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> finalType = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> reportType) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!finalType) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">await</span> <span class="variable constant_">EVENT_REPORT_FUNCTION_MAP</span>[key](params).<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                    finalType = <span class="literal">true</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(error)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> finalType</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;埋点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;针对特定用户行为或事件进行捕获、处理和发送的相关技术及其实施过程&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="埋点监控" scheme="http://example.com/categories/%E5%9F%8B%E7%82%B9%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="埋点监控" scheme="http://example.com/tags/%E5%9F%8B%E7%82%B9%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>扫码登录</title>
    <link href="http://example.com/2023/10/17/%E6%89%AB%E7%A0%81%E7%99%BB%E5%BD%95/"/>
    <id>http://example.com/2023/10/17/%E6%89%AB%E7%A0%81%E7%99%BB%E5%BD%95/</id>
    <published>2023-10-17T13:00:04.000Z</published>
    <updated>2023-10-17T13:02:06.970Z</updated>
    
    <content type="html"><![CDATA[<h5 id="原理概述">原理概述</h5><ul><li>PC端生成二维码，然后通过不断轮询，查询当前二维码状态</li><li><code>App</code>里扫码拿到<code>qrcode_id</code>,根据用户操作调用不同的修改二维码状态接口</li><li>通过轮询接口的返回值进行登录等</li></ul><span id="more"></span><h5 id="nest服务">nest服务</h5><ul><li><code>npm install -g @nestjs/cli</code></li><li><code>nest new qrcode-demo</code></li><li><code>npm install qrcode @types/qrcode</code></li><li><code>npm install @nestjs/jwt</code></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pp.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppController</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./app.controller&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./app.service&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">JwtModule</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/jwt&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  <span class="attr">imports</span>: [</span><br><span class="line">    <span class="title class_">JwtModule</span>.<span class="title function_">register</span>(&#123;</span><br><span class="line">      <span class="attr">secret</span>: <span class="string">&#x27;cy&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">  <span class="attr">providers</span>: [<span class="title class_">AppService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app.controller.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BadRequestException</span>, <span class="title class_">Controller</span>, <span class="title class_">Get</span>, <span class="title class_">Headers</span>, <span class="title class_">Inject</span>, <span class="title class_">Query</span>, <span class="title class_">UnauthorizedException</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./app.service&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; randomUUID &#125; <span class="keyword">from</span> <span class="string">&#x27;crypto&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> qrcode <span class="keyword">from</span> <span class="string">&#x27;qrcode&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">JwtService</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@nestjs/jwt&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>&lt;<span class="built_in">string</span>, <span class="title class_">QrCodeInfo</span>&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">QrCodeInfo</span> &#123;</span><br><span class="line">  <span class="attr">status</span>: <span class="string">&#x27;noscan&#x27;</span> | <span class="string">&#x27;scan-wait-confirm&#x27;</span> | <span class="string">&#x27;scan-confirm&#x27;</span> | <span class="string">&#x27;scan-cancel&#x27;</span> | <span class="string">&#x27;expired&#x27;</span>,</span><br><span class="line">  userInfo?: &#123;</span><br><span class="line">    <span class="attr">userId</span>: <span class="built_in">number</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// noscan 未扫描</span></span><br><span class="line"><span class="comment">// scan-wait-confirm -已扫描，等待用户确认</span></span><br><span class="line"><span class="comment">// scan-confirm 已扫描，用户同意授权</span></span><br><span class="line"><span class="comment">// scan-cancel 已扫描，用户取消授权</span></span><br><span class="line"><span class="comment">// expired 已过期</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppController</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> appService: AppService</span>) &#123; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>()</span><br><span class="line">  <span class="title function_">getHello</span>(): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">appService</span>.<span class="title function_">getHello</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">&#x27;qrcode/generate&#x27;</span>)</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">generate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> uuid = <span class="title function_">randomUUID</span>();</span><br><span class="line">    <span class="keyword">const</span> dataUrl = <span class="keyword">await</span> qrcode.<span class="title function_">toDataURL</span>(<span class="string">`http://192.168.2.110:3000/pages/confirm.html?id=<span class="subst">$&#123;uuid&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">    map.<span class="title function_">set</span>(<span class="string">`qrcode_<span class="subst">$&#123;uuid&#125;</span>`</span>, &#123;</span><br><span class="line">      <span class="attr">status</span>: <span class="string">&#x27;noscan&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">qrcode_id</span>: uuid,</span><br><span class="line">      <span class="attr">img</span>: dataUrl</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">&#x27;qrcode/check&#x27;</span>)</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">check</span>(<span class="params"><span class="meta">@Query</span>(<span class="string">&#x27;id&#x27;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> info = map.<span class="title function_">get</span>(<span class="string">`qrcode_<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">    <span class="keyword">if</span> (info.<span class="property">status</span> === <span class="string">&#x27;scan-confirm&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">token</span>: <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">jwtService</span>.<span class="title function_">sign</span>(&#123;</span><br><span class="line">          <span class="attr">userId</span>: info.<span class="property">userInfo</span>.<span class="property">userId</span></span><br><span class="line">        &#125;),</span><br><span class="line">        ...info</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> info;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">&#x27;qrcode/scan&#x27;</span>)</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">scan</span>(<span class="params"><span class="meta">@Query</span>(<span class="string">&#x27;id&#x27;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> info = map.<span class="title function_">get</span>(<span class="string">`qrcode_<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">    <span class="keyword">if</span> (!info) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BadRequestException</span>(<span class="string">&#x27;二维码已过期&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    info.<span class="property">status</span> = <span class="string">&#x27;scan-wait-confirm&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;success&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">&#x27;qrcode/confirm&#x27;</span>)</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">confirm</span>(<span class="params"><span class="meta">@Query</span>(<span class="string">&#x27;id&#x27;</span>) id: <span class="built_in">string</span>, <span class="meta">@Headers</span>(<span class="string">&#x27;Authorization&#x27;</span>) auth: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> user;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> [, token] = auth.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> info = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">jwtService</span>.<span class="title function_">verify</span>(token);</span><br><span class="line"></span><br><span class="line">      user = <span class="variable language_">this</span>.<span class="property">users</span>.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span> == info.<span class="property">userId</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnauthorizedException</span>(<span class="string">&#x27;token 过期，请重新登录&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> info = map.<span class="title function_">get</span>(<span class="string">`qrcode_<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">    <span class="keyword">if</span> (!info) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BadRequestException</span>(<span class="string">&#x27;二维码已过期&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    info.<span class="property">status</span> = <span class="string">&#x27;scan-confirm&#x27;</span>;</span><br><span class="line">    info.<span class="property">userInfo</span> = user;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;success&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">&#x27;qrcode/cancel&#x27;</span>)</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">cancel</span>(<span class="params"><span class="meta">@Query</span>(<span class="string">&#x27;id&#x27;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> info = map.<span class="title function_">get</span>(<span class="string">`qrcode_<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">    <span class="keyword">if</span> (!info) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BadRequestException</span>(<span class="string">&#x27;二维码已过期&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    info.<span class="property">status</span> = <span class="string">&#x27;scan-cancel&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;success&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Inject</span>(<span class="title class_">JwtService</span>)</span><br><span class="line">  <span class="keyword">private</span> <span class="attr">jwtService</span>: <span class="title class_">JwtService</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> users = [</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">username</span>: <span class="string">&#x27;cy&#x27;</span>, <span class="attr">password</span>: <span class="string">&#x27;123456&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">username</span>: <span class="string">&#x27;cny&#x27;</span>, <span class="attr">password</span>: <span class="string">&#x27;123456&#x27;</span> &#125;,</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">&#x27;login&#x27;</span>)</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params"><span class="meta">@Query</span>(<span class="string">&#x27;username&#x27;</span>) username: <span class="built_in">string</span>, <span class="meta">@Query</span>(<span class="string">&#x27;password&#x27;</span>) password: <span class="built_in">string</span></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> user = <span class="variable language_">this</span>.<span class="property">users</span>.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">username</span> === username);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnauthorizedException</span>(<span class="string">&#x27;用户不存在&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (user.<span class="property">password</span> !== password) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnauthorizedException</span>(<span class="string">&#x27;密码错误&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">token</span>: <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">jwtService</span>.<span class="title function_">sign</span>(&#123;</span><br><span class="line">        <span class="attr">userId</span>: user.<span class="property">id</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">&#x27;userInfo&#x27;</span>)</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">userInfo</span>(<span class="params"><span class="meta">@Headers</span>(<span class="string">&#x27;Authorization&#x27;</span>) auth: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> [, token] = auth.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> info = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">jwtService</span>.<span class="title function_">verify</span>(token);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> user = <span class="variable language_">this</span>.<span class="property">users</span>.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span> == info.<span class="property">userId</span>);</span><br><span class="line">      <span class="keyword">return</span> user;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnauthorizedException</span>(<span class="string">&#x27;token 过期，请重新登录&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="vue">vue</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Login.vue</span></span><br><span class="line"><span class="comment">// 二维码</span></span><br><span class="line"><span class="keyword">const</span> qrCodeBase64 = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">// 扫码状态</span></span><br><span class="line"><span class="keyword">const</span> scanStatus = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> timer;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启轮询</span></span><br><span class="line">axios.<span class="title function_">get</span>(<span class="string">&#x27;local/qrcode/generate&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    qrCodeBase64.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">img</span></span><br><span class="line">    <span class="title function_">queryStatus</span>(res.<span class="property">data</span>.<span class="property">qrcode_id</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">queryStatus</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  axios.<span class="title function_">get</span>(<span class="string">&#x27;local/qrcode/check?id=&#x27;</span> + id).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> status = res.<span class="property">data</span>.<span class="property">status</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> content = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">switch</span> (status) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;noscan&#x27;</span>: content = <span class="string">&#x27;未扫码&#x27;</span>; <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;scan-wait-confirm&#x27;</span>: content = <span class="string">&#x27;已扫码，等待确认&#x27;</span>; <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;scan-confirm&#x27;</span>: &#123;</span><br><span class="line">        content = <span class="string">&#x27;已确认，当前登录用户：&#x27;</span> + res.<span class="property">data</span>.<span class="property">userInfo</span>.<span class="property">username</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;scan-cancel&#x27;</span>: content = <span class="string">&#x27;已取消&#x27;</span>; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    scanStatus.<span class="property">value</span> = status</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;content: &#x27;</span>, content,status);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (status === <span class="string">&#x27;noscan&#x27;</span> || status === <span class="string">&#x27;scan-cancel&#x27;</span> || status === <span class="string">&#x27;scan-wait-confirm&#x27;</span>) &#123;</span><br><span class="line">      timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">queryStatus</span>(id), <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="qrCodeCom">qrCodeCom</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import Motion from &#x27;../utils/motion&#x27;</span><br><span class="line">import SuccessSvg from &#x27;@/assets/svg/success.svg?component&#x27;</span><br><span class="line">import RefreshOffIcon from &#x27;@iconify-icons/material-symbols/refresh-rounded&#x27;</span><br><span class="line"></span><br><span class="line">const props = defineProps(&#123;</span><br><span class="line">  qrCodeBase64: &#123;</span><br><span class="line">    type: String,</span><br><span class="line">    default: &#x27;&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  scanStatus: &#123;</span><br><span class="line">    type: String,</span><br><span class="line">    default: &#x27;noscan&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 扫码状态</span><br><span class="line">enum SCANSTATUS &#123;</span><br><span class="line">  NOSCAN = &#x27;noscan&#x27;, // 未扫描</span><br><span class="line">  SCANWAITCONFIRM = &#x27;scan-wait-confirm&#x27;, // 已扫描，等待用户确认</span><br><span class="line">  SCANCONFIRM = &#x27;scan-confirm&#x27;, // 已扫描，用户同意授权</span><br><span class="line">  SCANCANCEL = &#x27;scan-cancel&#x27;, // 已扫描，用户取消授权</span><br><span class="line">  EXPIRED = &#x27;expired&#x27;, // 已过期</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;Motion&gt;</span><br><span class="line">    &lt;div class=&quot;qrcode flex-c mb-5&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;qrcode-qr&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;qrCodeBase64&quot; width=&quot;180&quot;&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;qrcode-mask&quot; :class=&quot;[ scanStatus === SCANSTATUS.EXPIRED ? &#x27;expired&#x27; : &#x27;&#x27;, (scanStatus !== SCANSTATUS.NOSCAN &amp;&amp; scanStatus !== SCANSTATUS.SCANCANCEL) ? &#x27;bg-[#fff]&#x27; : &#x27;&#x27;]&quot;&gt;</span><br><span class="line">        &lt;div v-if=&quot;scanStatus === SCANSTATUS.SCANWAITCONFIRM&quot; class=&quot;qrcode-result&quot;&gt;</span><br><span class="line">          &lt;SuccessSvg /&gt;</span><br><span class="line">          扫码成功</span><br><span class="line">          &lt;div&gt;请用手机授权登录&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-if=&quot;scanStatus === SCANSTATUS.SCANCONFIRM&quot; class=&quot;qrcode-result&quot;&gt;</span><br><span class="line">          &lt;SuccessSvg /&gt;</span><br><span class="line">          登录成功</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div v-if=&quot;scanStatus === SCANSTATUS.EXPIRED&quot; class=&quot;qrcode-result cursor-pointer text-[#fff]&quot;&gt;</span><br><span class="line">          二维码已过期</span><br><span class="line">          &lt;p class=&quot;flex-c&quot;&gt;</span><br><span class="line">            &lt;IconifyIconOffline :icon=&quot;RefreshOffIcon&quot; class=&quot;mr-1&quot; /&gt;</span><br><span class="line">            点击刷新</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;flex justify-center text-[18px] text-[#fff]&quot;&gt;</span><br><span class="line">      &lt;img class=&quot;mr-2&quot;</span><br><span class="line">        src=&quot;https://lf3-cdn-tos.bytescm.com/obj/static/xitu_juejin_web/e0ff12435b30910520c9a3aac9b90487.svg&quot;</span><br><span class="line">        width=&quot;20&quot; /&gt;</span><br><span class="line">      使用微信扫一扫登录</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/Motion&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line">.qrcode &#123;</span><br><span class="line">  position: relative;</span><br><span class="line"></span><br><span class="line">  &amp;-qr &#123;</span><br><span class="line">    width: 180px;</span><br><span class="line">    height: 180px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;-mask &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    width: 180px;</span><br><span class="line">    height: 180px;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    align-items: center;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    opacity: .9;</span><br><span class="line">    color: #181818;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    line-height: 22px;</span><br><span class="line">    text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;-result &#123;</span><br><span class="line">    user-select: none;</span><br><span class="line"></span><br><span class="line">    &amp;&gt;svg &#123;</span><br><span class="line">      display: inline-block;</span><br><span class="line">      vertical-align: middle;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.expired &#123;</span><br><span class="line">  background: rgba(0, 0, 0, 0.5);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;原理概述&quot;&gt;原理概述&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;PC端生成二维码，然后通过不断轮询，查询当前二维码状态&lt;/li&gt;
&lt;li&gt;&lt;code&gt;App&lt;/code&gt;里扫码拿到&lt;code&gt;qrcode_id&lt;/code&gt;,根据用户操作调用不同的修改二维码状态接口&lt;/li&gt;
&lt;li&gt;通过轮询接口的返回值进行登录等&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Scan" scheme="http://example.com/categories/Scan/"/>
    
    <category term="Qrcode" scheme="http://example.com/categories/Scan/Qrcode/"/>
    
    
    <category term="Scan" scheme="http://example.com/tags/Scan/"/>
    
    <category term="Qrcode" scheme="http://example.com/tags/Qrcode/"/>
    
  </entry>
  
  <entry>
    <title>基于simple-uploader.js的文件切片上传等</title>
    <link href="http://example.com/2023/10/10/%E5%9F%BA%E4%BA%8Esimple-uploader.js%E7%9A%84%E6%96%87%E4%BB%B6%E5%88%87%E7%89%87%E4%B8%8A%E4%BC%A0%E7%AD%89/"/>
    <id>http://example.com/2023/10/10/%E5%9F%BA%E4%BA%8Esimple-uploader.js%E7%9A%84%E6%96%87%E4%BB%B6%E5%88%87%E7%89%87%E4%B8%8A%E4%BC%A0%E7%AD%89/</id>
    <published>2023-10-10T10:42:48.000Z</published>
    <updated>2023-10-17T13:01:45.971Z</updated>
    
    <content type="html"><![CDATA[<h5 id="安装依赖">安装依赖</h5><ul><li><p><code>npm install vue-simple-uploader --save</code></p></li><li><p><code>npm install spark-md5 --save</code></p></li></ul><h5 id="特性">特性</h5><ul><li>支持文件、多文件、文件夹上传</li><li>支持拖拽文件、文件夹上传</li><li>统一对待文件和文件夹，方便操作管理</li><li>可暂停、继续上传</li><li>错误处理</li><li>支持“快传”，通过文件判断服务端是否已存在从而实现“快传”</li><li>上传队列管理，支持最大并发上传</li><li>分块上传</li><li>支持进度、预估剩余时间、出错自动重试、重传等操作</li></ul><span id="more"></span><h5 id="Code">Code</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">// template</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;uploader ref=&quot;uploaderRef&quot; class=&quot;uploader-app&quot; :options=&quot;initOptions&quot;</span><br><span class="line">      :file-status-text=&quot;fileStatusText&quot; :auto-start=&quot;false&quot; @file-added=&quot;onFileAdded&quot; @file-success=&quot;onFileSuccess&quot;</span><br><span class="line">      @file-progress=&quot;onFileProgress&quot; @file-error=&quot;onFileError&quot;&gt;</span><br><span class="line">      &lt;uploader-btn class=&quot;uploader-app-btn&quot; ref=&quot;uploadBtnRef&quot;&gt;选择文件&lt;/uploader-btn&gt;</span><br><span class="line">      &lt;div class=&quot;uploadingWrapper&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;uploadingWrapper-header&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;uploadingWrapper-header-title&quot;&gt;上传完成</span><br><span class="line">            (&#123;&#123; uploaderRef?.fileList.length &#125;&#125;/&#123;&#123; completedFileList.length &#125;&#125;)</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;hidden uploadingWrapper-header-operate&quot;&gt;</span><br><span class="line">            &lt;span&gt;全部取消&lt;/span&gt;</span><br><span class="line">            &lt;span&gt;清空失效&lt;/span&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;uploadingWrapper-list&quot;&gt;</span><br><span class="line">          &lt;el-scrollbar&gt;</span><br><span class="line">            &lt;div v-if=&quot;uploaderRef?.fileList.length &gt; 0&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;uploadingWrapper-list-item&quot; v-for=&quot;file in uploaderRef?.fileList&quot; :key=&quot;file.id&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;uploadingWrapper-list-item-filename&quot;&gt;</span><br><span class="line">                  &lt;div class=&quot;uploadingWrap-list-item-filename-icon&quot;&gt;</span><br><span class="line">                    &lt;img src=&quot;./images/audio-icon.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div class=&quot;uploadingWrapper-list-item-filename-desc&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;uploadingWrapper-list-item-filename-desc-name&quot;&gt;</span><br><span class="line">                      &#123;&#123; file.name &#125;&#125;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;uploadingWrapper-list-item-filename-desc-progress&quot;&gt;</span><br><span class="line">                      &lt;el-progress :text-inside=&quot;true&quot; :percentage=&quot;file.percentage&quot; /&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;uploadingWrapper-list-item-filename-desc-status&quot;&gt;</span><br><span class="line">                      &lt;div class=&quot;uploadingWrapper-list-item-filename-desc-status-filesize&quot;&gt;</span><br><span class="line">                        &#123;&#123; (file.size / 1024 / 1024).toFixed(2) &#125;&#125;MB</span><br><span class="line">                      &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;uploadingWrapper-list-item-operate&quot;&gt;</span><br><span class="line">                  &lt;div v-if=&quot;file.md5Status &amp;&amp; file.completed&quot; class=&quot;uploadingWrapper-list-item-operate-item&quot;</span><br><span class="line">                    @click=&quot;download(file)&quot;&gt;</span><br><span class="line">                    &lt;img</span><br><span class="line">                      src=&quot;https://edu-wenku.bdimg.com/v1/pc/aigc/xiuding-1685086333409.png&quot;</span><br><span class="line">                      alt=&quot;&quot;&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div v-if=&quot;file.md5Status &amp;&amp; !file.completed &amp;&amp; file.paused&quot;</span><br><span class="line">                    class=&quot;uploadingWrapper-list-item-operate-item&quot; @click=&quot;resume(file)&quot;&gt;</span><br><span class="line">                    &lt;img</span><br><span class="line">                      src=&quot;https://edu-wenku.bdimg.com/v1/pc/aigc/xiuding-1685086333409.png&quot;</span><br><span class="line">                      alt=&quot;&quot;&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div v-if=&quot;file.md5Status &amp;&amp; !file.completed &amp;&amp; !file.paused&quot;</span><br><span class="line">                    class=&quot;uploadingWrapper-list-item-operate-item&quot; @click=&quot;pause(file)&quot;&gt;</span><br><span class="line">                    &lt;img</span><br><span class="line">                      src=&quot;https://edu-wenku.bdimg.com/v1/pc/aigc/xiuding-1685086333409.png&quot;</span><br><span class="line">                      alt=&quot;&quot;&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div v-if=&quot;file.md5Status &amp;&amp; !file.completed &amp;&amp; file.error&quot;</span><br><span class="line">                    class=&quot;uploadingWrapper-list-item-operate-item&quot; @click=&quot;retry(file)&quot;&gt;</span><br><span class="line">                    &lt;img</span><br><span class="line">                      src=&quot;https://edu-wenku.bdimg.com/v1/pc/aigc/xiuding-1685086333409.png&quot;</span><br><span class="line">                      alt=&quot;&quot;&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div v-if=&quot;!file.completed&quot; class=&quot;uploadingWrapper-list-item-operate-item&quot; @click=&quot;close(file)&quot;&gt;</span><br><span class="line">                    &lt;img</span><br><span class="line">                      src=&quot;https://edu-wenku.bdimg.com/v1/pc/aigc/xiuding-1685086333409.png&quot;</span><br><span class="line">                      alt=&quot;&quot;&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;el-empty v-else description=&quot;暂无待上传文件&quot; :image-size=&quot;200&quot; /&gt;</span><br><span class="line">          &lt;/el-scrollbar&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/uploader&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref, watch, computed, nextTick, onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; generateMD5 &#125; <span class="keyword">from</span> <span class="string">&#x27;./md5&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Bus</span> <span class="keyword">from</span> <span class="string">&#x27;./bus&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">defineOptions</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Upload&#x27;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">global</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 发送给服务器的额外参数</span></span><br><span class="line">  <span class="attr">params</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Object</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">options</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Object</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">accept</span>: [<span class="string">&#x27;.pdf&#x27;</span>, <span class="string">&#x27;.txt&#x27;</span>, <span class="string">&#x27;.docx&#x27;</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> emits = <span class="title function_">defineEmits</span>([<span class="string">&#x27;fileAdded&#x27;</span>, <span class="string">&#x27;fileSuccess&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> initOptions = &#123;</span><br><span class="line">  <span class="comment">// 后端接口地址</span></span><br><span class="line">  <span class="attr">target</span>: <span class="string">&#x27;http://localhost:3000/upload&#x27;</span>,</span><br><span class="line">  <span class="comment">// 分块大小</span></span><br><span class="line">  <span class="attr">chunkSize</span>: <span class="string">&#x27;2048000&#x27;</span>,</span><br><span class="line">  <span class="comment">// 上传参数名</span></span><br><span class="line">  <span class="attr">fileParameterName</span>: <span class="string">&#x27;file&#x27;</span>,</span><br><span class="line">  <span class="comment">// 最大自动失败重试上传次数</span></span><br><span class="line">  <span class="attr">maxChunkRetries</span>: <span class="number">3</span>,</span><br><span class="line">  <span class="comment">// 是否开启服务器分片校验</span></span><br><span class="line">  <span class="attr">testChunks</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// 服务器分片校验函数，秒传及断点续传基础</span></span><br><span class="line">  <span class="attr">checkChunkUploadedByResponse</span>: <span class="keyword">function</span> (<span class="params">chunk, message</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;切片: &#x27;</span>, chunk, message);</span><br><span class="line">    <span class="keyword">let</span> skip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> objMessage = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(message)</span><br><span class="line">      <span class="keyword">if</span> (objMessage.<span class="property">skipUpload</span>) &#123;</span><br><span class="line">        skip = <span class="literal">true</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        skip = (objMessage.<span class="property">uploaded</span> || []).<span class="title function_">indexOf</span>(chunk.<span class="property">offset</span> + <span class="number">1</span>) &gt;= <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> skip</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 额外参数</span></span><br><span class="line">  <span class="attr">query</span>: <span class="function">(<span class="params">file, chunk</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      ...file.<span class="property">params</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文件上传状态</span></span><br><span class="line"><span class="keyword">const</span> fileStatusText = &#123;</span><br><span class="line">  <span class="attr">success</span>: <span class="string">&#x27;上传成功&#x27;</span>,</span><br><span class="line">  <span class="attr">error</span>: <span class="string">&#x27;上传失败&#x27;</span>,</span><br><span class="line">  <span class="attr">uploading</span>: <span class="string">&#x27;上传中&#x27;</span>,</span><br><span class="line">  <span class="attr">paused</span>: <span class="string">&#x27;已暂停&#x27;</span>,</span><br><span class="line">  <span class="attr">waiting</span>: <span class="string">&#x27;等待上传&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> panelShow = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">const</span> uploaderRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> uploadBtnRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">let</span> mergeFn = mergeSimpleUpload</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">mergeSimpleUpload</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">resolve</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// const uploader = computed(() =&gt; uploaderRef.value?.uploader)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> customParams = &#123;&#125;</span><br><span class="line"><span class="comment">// 自定义配置项</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">customizeOptions</span>(<span class="params">opts: any</span>) &#123;</span><br><span class="line">  <span class="comment">// 自定义上传url</span></span><br><span class="line">  <span class="keyword">if</span> (opts.<span class="property">target</span>) &#123;</span><br><span class="line">    uploaderRef.<span class="property">value</span>.<span class="property">uploader</span>.<span class="property">opts</span>.<span class="property">target</span> = opts.<span class="property">target</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 是否可以秒传、断点续传</span></span><br><span class="line">  <span class="keyword">if</span> (opts.<span class="property">testChunks</span> !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">    uploaderRef.<span class="property">value</span>.<span class="property">uploader</span>.<span class="property">opts</span>.<span class="property">testChunks</span> = opts.<span class="property">testChunks</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// merge 的方法，类型为Function，返回Promise</span></span><br><span class="line">  <span class="keyword">if</span> (opts.<span class="property">mergeFn</span>) &#123;</span><br><span class="line">    mergeFn = opts.<span class="property">mergeFn</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 自定义文件上传类型</span></span><br><span class="line">  <span class="keyword">let</span> uploadBtnLabel = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;uploader-app-btn&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">let</span> uploadBtn = uploadBtnLabel.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;input&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">  uploadBtn.<span class="title function_">setAttribute</span>(<span class="string">&#x27;accept&#x27;</span>, props.<span class="property">options</span>.<span class="property">accept</span>.<span class="title function_">join</span>(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="function">() =&gt;</span> props.<span class="property">params</span>,</span><br><span class="line">  <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (data) &#123;</span><br><span class="line">      customParams = data</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="function">() =&gt;</span> props.<span class="property">options</span>,</span><br><span class="line">  <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (data) &#123;</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">customizeOptions</span>(data)</span><br><span class="line">      &#125;, <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> acceptType = [<span class="string">&#x27;pdf&#x27;</span>, <span class="string">&#x27;vnd.openxmlformats-officedocument.wordprocessingml.document&#x27;</span>]</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">onFileAdded</span>(<span class="params">file: any</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!acceptType.<span class="title function_">includes</span>(file.<span class="title function_">getType</span>())) &#123;</span><br><span class="line">    <span class="title function_">error</span>(<span class="string">&#x27;该格式文件不支持&#x27;</span>)</span><br><span class="line">    file.<span class="property">ignored</span> = <span class="literal">true</span> <span class="comment">// 文件校验，不符规则的文件过滤掉</span></span><br><span class="line">  &#125;</span><br><span class="line">  panelShow.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="comment">// 展示弹窗</span></span><br><span class="line">  <span class="comment">// trigger(&#x27;fileAdded&#x27;) 文件选择后的回调</span></span><br><span class="line">  <span class="comment">// 将额外的参数赋值到每个文件上，以不同文件使用不同params的需求</span></span><br><span class="line">  <span class="comment">// file.params = customParams.value</span></span><br><span class="line">  uploaderRef?.<span class="property">value</span>.<span class="property">fileList</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: any</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">id</span> === file.<span class="property">id</span>)</span><br><span class="line">      item.<span class="property">md5Status</span> = <span class="literal">false</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">// 计算MD5</span></span><br><span class="line">  <span class="keyword">const</span> md5 = <span class="keyword">await</span> <span class="title function_">computeMD5</span>(file)</span><br><span class="line">  <span class="title function_">startUpload</span>(file, md5)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">computeMD5</span>(<span class="params">file: any</span>) &#123;</span><br><span class="line">  <span class="comment">// 暂停文件</span></span><br><span class="line">  file.<span class="title function_">pause</span>()</span><br><span class="line">  <span class="comment">// 开始计算MD5</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">generateMD5</span>(file, &#123;</span><br><span class="line">      <span class="title function_">onProgress</span>(<span class="params">currentChunk, chunks</span>) &#123;</span><br><span class="line">        <span class="comment">// 实时展示MD5的计算进度</span></span><br><span class="line">        <span class="title function_">nextTick</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> md5ProgressText = <span class="string">&#x27;校验MD5 &#x27;</span> + ((currentChunk / chunks) * <span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">0</span>) + <span class="string">&#x27;%&#x27;</span></span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;实时展示MD5的计算进度: &#x27;</span>, md5ProgressText);</span><br><span class="line">          <span class="comment">// document.querySelector(`.custom-status-$&#123;file.id&#125;`).innerText = md5ProgressText</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">onSuccess</span>(<span class="params">md5</span>) &#123;</span><br><span class="line">        uploaderRef?.<span class="property">value</span>.<span class="property">fileList</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item: any</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (item.<span class="property">id</span> === file.<span class="property">id</span>)</span><br><span class="line">            item.<span class="property">md5Status</span> = <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="title function_">resolve</span>(md5)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">onError</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">error</span>(<span class="string">`文件<span class="subst">$&#123;file.name&#125;</span>读取出错，请检查该文件`</span>)</span><br><span class="line">        file.<span class="title function_">cancel</span>()</span><br><span class="line">        <span class="title function_">reject</span>()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// md5计算完毕，开始上传</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">startUpload</span>(<span class="params">file: any, md5: any</span>) &#123;</span><br><span class="line">  file.<span class="property">uniqueIdentifier</span> = md5</span><br><span class="line">  file.<span class="title function_">resume</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 上传成功list</span></span><br><span class="line"><span class="keyword">const</span> completedFileList = <span class="title function_">ref</span>([])</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onFileSuccess</span>(<span class="params">rootFile, file, response, chunk</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;rootFile, file, response, chunk: &#x27;</span>, rootFile, file, response, chunk);</span><br><span class="line">  <span class="keyword">let</span> res = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(response)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 服务端自定义的错误（即http状态码为200，但是是错误的情况），这种错误是Uploader无法拦截的</span></span><br><span class="line">  <span class="keyword">if</span> (!res.<span class="property">result</span>) &#123;</span><br><span class="line">    <span class="title function_">error</span>(res.<span class="property">message</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果服务端返回了需要合并的参数</span></span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">needMerge</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;合并Fn&#x27;</span>);</span><br><span class="line">    <span class="comment">// mergeFn(&#123;</span></span><br><span class="line">    <span class="comment">//   tempName: res.tempName,</span></span><br><span class="line">    <span class="comment">//   fileName: file.name,</span></span><br><span class="line">    <span class="comment">//   ...file.params</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">    <span class="comment">//   .then((res) =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//     // 文件合并成功</span></span><br><span class="line">    <span class="comment">//     trigger(&#x27;fileSuccess&#x27;)</span></span><br><span class="line">    <span class="comment">//   &#125;)</span></span><br><span class="line">    <span class="comment">//   .catch((e) =&gt; &#123; &#125;)</span></span><br><span class="line">    <span class="comment">// 不需要合并</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// trigger(&#x27;fileSuccess&#x27;)</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;上传成功&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 记录上传成功列表</span></span><br><span class="line">  completedFileList.<span class="property">value</span> = uploaderRef?.<span class="property">value</span>?.<span class="property">fileList</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">item: any</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">completed</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> item</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onFileProgress</span>(<span class="params">rootFile, file, chunk</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> percentage = file.<span class="title function_">progress</span>() * <span class="number">100</span></span><br><span class="line">  uploaderRef?.<span class="property">value</span>.<span class="property">fileList</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">uniqueIdentifier</span> === file.<span class="property">uniqueIdentifier</span>) &#123;</span><br><span class="line">      item.<span class="property">percentage</span> = percentage</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;percentage * 100: &#x27;</span>, percentage);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onFileError</span>(<span class="params">rootFile, file, response, chunk</span>) &#123;</span><br><span class="line">  <span class="title function_">error</span>(response)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下载</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">download</span>(<span class="params">file: any</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;下载&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 暂停</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">pause</span>(<span class="params">file: any</span>) &#123;</span><br><span class="line">  file.<span class="title function_">pause</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 继续上传</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">resume</span>(<span class="params">file: any</span>) &#123;</span><br><span class="line">  file.<span class="title function_">resume</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">close</span>(<span class="params">file: any</span>) &#123;</span><br><span class="line">  file.<span class="title function_">cancel</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 重试</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">retry</span>(<span class="params">file: any</span>) &#123;</span><br><span class="line">  file.<span class="title function_">retry</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">error</span>(<span class="params">msg: string</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;msg: &#x27;</span>, msg);</span><br><span class="line">  <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">    <span class="attr">message</span>: msg,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// Bus.on(&#x27;openUploader&#x27;, (&#123; params = &#123;&#125;, options = &#123;&#125; &#125;) =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   customParams = params</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//   customizeOptions(options)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//   if (uploadBtnRef.value) &#123;</span></span><br><span class="line">  <span class="comment">//     uploadBtnRef.value.$el.click()</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;)</span></span><br><span class="line">  <span class="title function_">nextTick</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> opt = &#123;</span><br><span class="line">      <span class="attr">target</span>: <span class="string">&#x27;http://localhost:3000/upload&#x27;</span>,</span><br><span class="line">      <span class="attr">testChunks</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">mergeFn</span>: <span class="literal">null</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">customizeOptions</span>(opt)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">// css</span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line"><span class="selector-class">.uploader-app-btn</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.uploadingWrapper</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">560px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">408px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">8px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">16</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line"></span><br><span class="line">  &amp;-<span class="selector-tag">header</span> &#123;</span><br><span class="line">    &amp;-title &#123;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">      <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">      <span class="attribute">border-bottom-width</span>: <span class="number">1px</span>;</span><br><span class="line">      <span class="attribute">border-color</span>: <span class="number">#f4f4f4</span>;</span><br><span class="line">      <span class="attribute">border-bottom-style</span>: solid;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">24px</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">16px</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#454d5a</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;-list &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">349px</span>;</span><br><span class="line"></span><br><span class="line">    &amp;-item &#123;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">72px</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line">      &amp;-filename &#123;</span><br><span class="line">        <span class="attribute">flex</span>: none;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">justify-content</span>: center;</span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">420px</span>;</span><br><span class="line"></span><br><span class="line">        &amp;-<span class="attribute">icon</span> &#123;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line"></span><br><span class="line">          &amp;&gt;<span class="selector-tag">img</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;-desc &#123;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">360px</span>;</span><br><span class="line">          <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">          <span class="attribute">display</span>: flex;</span><br><span class="line">          <span class="attribute">flex-direction</span>: column;</span><br><span class="line">          <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">          <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">          <span class="attribute">color</span>: <span class="number">#03081a</span>;</span><br><span class="line">          <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">          &amp;-name &#123;</span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">            <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">            <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &amp;-progress &#123;</span><br><span class="line">            :<span class="built_in">deep</span>(.el-progress-bar__innerText) &#123;</span><br><span class="line">              <span class="attribute">display</span>: none;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &amp;-status &#123;</span><br><span class="line">            &amp;-filesize &#123;</span><br><span class="line">              <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">              <span class="attribute">color</span>: <span class="number">#878c9c</span>;</span><br><span class="line">              <span class="attribute">display</span>: inline-block;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;-operate &#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">15px</span>;</span><br><span class="line"></span><br><span class="line">        &amp;-item &#123;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">28px</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">28px</span>;</span><br><span class="line">          <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">          <span class="attribute">cursor</span>: pointer;</span><br><span class="line"></span><br><span class="line">          &amp;&gt;<span class="selector-tag">img</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">28px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">28px</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;-item<span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">          <span class="attribute">margin-right</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;-tip &#123;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">justify-content</span>: center;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#afb3bf</span>;</span><br><span class="line">      <span class="attribute">margin-bottom</span>: -<span class="number">12px</span>;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="Description">Description</h5><ul><li><code>uploadBtnRef.value.btn.click()</code>  唤醒选择文件窗口</li><li>MD5数字签名</li></ul><p><strong>核心</strong></p><ul><li>md5数字签名</li><li>文件分片<ul><li>把一个大文件按照一定大小来分成很多个小文件（分片）来上传，上传后再由服务端对所有上传的文件进行汇总整合成原始的文件</li><li>流程概述<ul><li>Blob对象中的slice方法可以对文件进行切割，File对象是继承Blob对象的，因此File对象也有slice方法</li><li>定义每一个分片文件的大小变量为<strong>chunkSize</strong>，通过文件大小<strong>fileSize</strong>和分片大小chunkSize得到分片数量chunks，通过for循环以及**file.slice()**方法对文件进行分片，序号为0 - n，和已上传的切片列表做比对，得到所有未上传的分片，添加到请求列表中</li></ul></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自己实现的切片上传最小示例</span></span><br><span class="line"><span class="comment">// vue-simple-uploader自动将文件进行分片，在options的chunkSize中可以设置每个分片的大小。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 切片大小</span></span><br><span class="line"><span class="keyword">const</span> chunkSize = <span class="number">100</span> * <span class="number">1024</span> <span class="comment">// 100kb</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeFile</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> files = e.<span class="property">target</span>.<span class="property">files</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; files.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> curFile = files[i]</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;curFile: &#x27;</span>, curFile);</span><br><span class="line">    <span class="keyword">const</span> totalSize = curFile.<span class="property">size</span> <span class="comment">// 文件大小</span></span><br><span class="line">    <span class="keyword">const</span> fileName = curFile.<span class="property">name</span> <span class="comment">// 文件名</span></span><br><span class="line">    <span class="keyword">let</span> md5Identifier; <span class="comment">// md5数字签名</span></span><br><span class="line">    <span class="title function_">md5File</span>(curFile).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      md5Identifier = res</span><br><span class="line">      <span class="comment">// md5加密异步，需等待加密成功再进行切片上传</span></span><br><span class="line">      <span class="title function_">startToSlice</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">startToSlice</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 计算文件切片总数</span></span><br><span class="line">      <span class="keyword">const</span> totalChunks = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(totalSize / chunkSize)</span><br><span class="line">      <span class="comment">// </span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= totalChunks; j++) &#123;</span><br><span class="line">        <span class="keyword">let</span> chunk;</span><br><span class="line">        <span class="keyword">if</span> (j == totalChunks) &#123;</span><br><span class="line">          <span class="comment">// 最后一片</span></span><br><span class="line">          chunk = curFile.<span class="title function_">slice</span>((j - <span class="number">1</span>) * chunkSize, totalSize)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          chunk = curFile.<span class="title function_">slice</span>((j - <span class="number">1</span>) * chunkSize, j * chunkSize)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">        formData.<span class="title function_">append</span>(<span class="string">&#x27;chunkNumber&#x27;</span>, j.<span class="title function_">toString</span>())  <span class="comment">// 当前切片idx</span></span><br><span class="line">        formData.<span class="title function_">append</span>(<span class="string">&#x27;chunkSize&#x27;</span>, chunkSize.<span class="title function_">toString</span>()) <span class="comment">// 切片大小</span></span><br><span class="line">        formData.<span class="title function_">append</span>(<span class="string">&#x27;totalSize&#x27;</span>, totalSize) <span class="comment">// 总文件大小</span></span><br><span class="line">        formData.<span class="title function_">append</span>(<span class="string">&#x27;md5Identifier&#x27;</span>, md5Identifier) <span class="comment">// md5数字签名</span></span><br><span class="line">        formData.<span class="title function_">append</span>(<span class="string">&#x27;totalChunks&#x27;</span>, totalChunks.<span class="title function_">toString</span>()) <span class="comment">// 文件切片总数</span></span><br><span class="line">        formData.<span class="title function_">append</span>(<span class="string">&#x27;file&#x27;</span>, chunk) <span class="comment">// 当前切片blob对象</span></span><br><span class="line">        <span class="comment">// 上传</span></span><br><span class="line">        <span class="title function_">axios</span>(&#123;</span><br><span class="line">          <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&#x27;/upload&#x27;</span>,</span><br><span class="line">          <span class="attr">data</span>: formData</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// md5加密</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">md5File</span>(<span class="params">file</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> blobSlice =</span><br><span class="line">      <span class="title class_">File</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span> ||</span><br><span class="line">      <span class="title class_">File</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">mozSlice</span> ||</span><br><span class="line">      <span class="title class_">File</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">webkitSlice</span></span><br><span class="line">    <span class="keyword">let</span> chunkSize = file.<span class="property">size</span> / <span class="number">100</span></span><br><span class="line">    <span class="keyword">let</span> chunks = <span class="number">100</span></span><br><span class="line">    <span class="keyword">let</span> currentChunk = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> spark = <span class="keyword">new</span> <span class="title class_">SparkMD5</span>.<span class="title class_">ArrayBuffer</span>()</span><br><span class="line">    <span class="keyword">let</span> fileReader = <span class="keyword">new</span> <span class="title class_">FileReader</span>()</span><br><span class="line">    fileReader.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="comment">// console.log(&#x27;read chunk nr&#x27;, currentChunk + 1, &#x27;of&#x27;, chunks)</span></span><br><span class="line">      spark.<span class="title function_">append</span>(e.<span class="property">target</span>.<span class="property">result</span>) <span class="comment">// Append array buffer</span></span><br><span class="line">      currentChunk++</span><br><span class="line">      <span class="keyword">if</span> (currentChunk &lt; chunks) &#123;</span><br><span class="line">        <span class="title function_">loadNext</span>()</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cur = +<span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;finished loading&#x27;</span>)</span><br><span class="line">        <span class="comment">// alert(spark.end() + &#x27;---&#x27; + (cur - pre)); // Compute hash</span></span><br><span class="line">        <span class="keyword">let</span> result = spark.<span class="title function_">end</span>()</span><br><span class="line">        <span class="title function_">resolve</span>(result)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fileReader.<span class="property">onerror</span> = <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;oops, something went wrong.&#x27;</span>)</span><br><span class="line">      <span class="title function_">reject</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">loadNext</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> start = currentChunk * chunkSize</span><br><span class="line">      <span class="keyword">let</span> end =</span><br><span class="line">        start + chunkSize &gt;= file.<span class="property">size</span> ? file.<span class="property">size</span> : start + chunkSize</span><br><span class="line">      fileReader.<span class="title function_">readAsArrayBuffer</span>(blobSlice.<span class="title function_">call</span>(file, start, end))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">loadNext</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>秒传及断点续传<ul><li>在上传过程最开始，发送一个get请求，询问服务器当前文件的存储信息</li><li>存储信息中已有该文件<ul><li>秒传</li></ul></li><li>存储信息中包含当前文件的部分分片信息<ul><li>断点续传<ul><li>跳过这部分分片的上传</li></ul></li></ul></li><li>存储信息为空<ul><li>完整上传</li></ul></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;安装依赖&quot;&gt;安装依赖&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;npm install vue-simple-uploader --save&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;npm install spark-md5 --save&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;特性&quot;&gt;特性&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;支持文件、多文件、文件夹上传&lt;/li&gt;
&lt;li&gt;支持拖拽文件、文件夹上传&lt;/li&gt;
&lt;li&gt;统一对待文件和文件夹，方便操作管理&lt;/li&gt;
&lt;li&gt;可暂停、继续上传&lt;/li&gt;
&lt;li&gt;错误处理&lt;/li&gt;
&lt;li&gt;支持“快传”，通过文件判断服务端是否已存在从而实现“快传”&lt;/li&gt;
&lt;li&gt;上传队列管理，支持最大并发上传&lt;/li&gt;
&lt;li&gt;分块上传&lt;/li&gt;
&lt;li&gt;支持进度、预估剩余时间、出错自动重试、重传等操作&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Upload" scheme="http://example.com/categories/Upload/"/>
    
    
    <category term="Upload" scheme="http://example.com/tags/Upload/"/>
    
  </entry>
  
  <entry>
    <title>webpack@4.41.2</title>
    <link href="http://example.com/2023/06/07/webpack-4-41-2/"/>
    <id>http://example.com/2023/06/07/webpack-4-41-2/</id>
    <published>2023-06-07T08:52:42.000Z</published>
    <updated>2023-06-07T08:57:52.501Z</updated>
    
    <content type="html"><![CDATA[<ul><li>浏览器厂商前缀</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;browserslist&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">  <span class="string">&quot;&gt; 1%&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;last 2 versions&quot;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><span id="more"></span><ul><li>src 源代码 里面的代码 不能够直接在浏览器上运行的</li><li>css 模块化</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  loader: <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">  options: &#123;</span><br><span class="line">    importLoaders: <span class="number">2</span>,</span><br><span class="line">    modules: true // css模块化</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>html-webpack-plugin</code><ul><li>自动生成html文件</li></ul></li><li><code>clean-webpack-plugin</code><ul><li>每次清除已打包文件</li></ul></li><li>HMR 热更新<ul><li>页面重新加载导致状态丢失</li></ul></li><li>JS 热更新</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">hot</span>.<span class="title function_">accept</span>(<span class="string">&#x27;./sth-Js&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 对 sth JS文件不自动刷新</span></span><br><span class="line"><span class="title function_">sth</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>Babel处理ES6代码</li><li><code>@babel-loader</code>、<code> @babel/preset-env</code>、<code>@babel/core</code></li><li><code>import '@babel/polyfill'</code><ul><li>打个补丁</li><li>但会污染全局环境</li></ul></li><li><code>core-js</code><ul><li>具有所有的es5 polyfill(除了function*)</li></ul></li><li>regengeator + core-js = 所有es6特性被低版本浏览器支持 = @babel/polyfill</li><li>.babelrc</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="comment">// presets: [[&#x27;@babel/preset-env&#x27;, &#123;</span></span><br><span class="line"><span class="comment">//   useBuiltIns: &#x27;usage&#x27;, // 按需引入polyfill</span></span><br><span class="line"><span class="comment">//   corejs: 3</span></span><br><span class="line"><span class="comment">// &#125;]] // 添加预设，babel-loader并不能直接将es6-&gt;es5</span></span><br><span class="line"><span class="attr">plugins</span>: [</span><br><span class="line">  [<span class="string">&#x27;@babel/plugin-transform-runtime&#x27;</span>, <span class="comment">// 避免代码冲突</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;absoluteRuntime&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&quot;corejs&quot;</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="string">&quot;helpers&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;regenerator&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.0.0-beta.0&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>vue-loader</code> | <code>vue-template-complier </code></p></li><li><p><code>webpack-dev-server</code></p><ul><li>看不到打包文件，会将打包文件放到内存当中</li></ul></li><li><p>Tree Shaking</p><ul><li>只支持 <code>ES Module</code> | 静态引入，编译时引入</li><li>不支持 <code>CommonJS</code>  | 动态引入，执行时引入</li><li>optimization<ul><li>production 模式下自动开启</li></ul></li></ul></li><li><p>package.json</p><ul><li>sideEffects [‘@bundle’] 取消 Tree Shaking 的影响</li></ul></li><li><p>不同的打包模式</p><ul><li>webpack-merge</li><li>webpack.pro.js</li><li>webpack.dev.js</li><li>webpack.test.js</li></ul></li><li><p>代码分割</p><ul><li>Code Splitting</li><li>splitChunks默认异步代码分割</li><li>import(/* webpackChunkName: “lodash”*/‘lodash’)<ul><li>webpackChunkName 自定义打包名</li></ul></li></ul></li><li><p>懒加载</p><ul><li>异步引入</li></ul></li><li><p>CSS 代码分割</p><ul><li><code>mini-css-extract-plugin@1.3.9</code></li><li>“sideEffects”: [“*.css”]<ul><li>production mode 自动tree-shaking 未使用文件</li></ul></li><li><code>css-minimizer-webpack-plugin@1.2.0</code><ul><li>CSS 代码压缩</li></ul></li></ul></li><li><p>自动加载模块，不必在任何地方都import或require个模块</p><ul><li>webpack.ProvidePlugin({key,value})</li></ul></li><li><p>生产 开发 模式公用</p><ul><li>babel-loader</li><li>noParse</li><li>IgnorePlugin</li><li>ParallelUglifyPlugin</li></ul></li><li><p>开发模式</p><ul><li>自动刷新、热更新 Webpack.HotModuleReplacementPlugin</li><li>DllReferencePlugin React Vue 预先打包一次</li></ul></li><li><p>减小产出代码体积</p><ul><li><p>代码体积小，加载速度更快</p></li><li><p>合理分包，不重复加载</p></li><li><p>程序运行速度更快，内存占用更小</p></li><li><p>图片比较小的时候可以采用base64编码  url-loader</p></li><li><p>cdn 引入 加速</p></li><li><p>scope hoisting 作用域提升  webpack@4.41.2 默认配置</p></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins</span>:[</span><br><span class="line">  <span class="keyword">new</span> webpack.<span class="property">optimize</span>.<span class="title class_">ModuleConcatenationPlugin</span>();</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>webpack.base.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">CleanWebpackPlugin</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;clean-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多进程打包</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HappyPack</span> = <span class="built_in">require</span>(<span class="string">&#x27;happypack&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// noParse: [/vue\.min\.js$/], // 忽略解析</span></span><br><span class="line">  <span class="attr">entry</span>: &#123;</span><br><span class="line">    <span class="attr">main</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      <span class="comment">// &#123;</span></span><br><span class="line">      <span class="comment">//   test: /\.js$/,</span></span><br><span class="line">      <span class="comment">//   use: [&#x27;happypack/loader?id=babel&#x27;] // 不再需要babel-loader编译</span></span><br><span class="line">      <span class="comment">// &#125;,</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.vue$/</span>,</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;vue-loader&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(png|jpg|jpeg|gif)$/</span>,</span><br><span class="line">        <span class="attr">use</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">loader</span>: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">            <span class="attr">options</span>: &#123;</span><br><span class="line">              <span class="comment">// 图片小于10kb 使用base64 格式产出</span></span><br><span class="line">              <span class="comment">// 大于10kb 像file-loader,使用 url 格式产出</span></span><br><span class="line">              <span class="attr">name</span>: <span class="string">&#x27;[path][name].[ext]&#x27;</span>,</span><br><span class="line">              <span class="attr">outputPath</span>: <span class="string">&#x27;images&#x27;</span>,</span><br><span class="line">              <span class="attr">limit</span>: <span class="number">10</span> * <span class="number">1024</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(eot|svg|ttf|woff)/</span>,</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;file-loader&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">template</span>: <span class="string">&#x27;./src/index.html&#x27;</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">CleanWebpackPlugin</span>(),</span><br><span class="line">    <span class="comment">// new webpack.ProvidePlugin(&#123;</span></span><br><span class="line">    <span class="comment">//   &#x27;_&#x27;: lodash, // 无需在模块引入lodash包</span></span><br><span class="line">    <span class="comment">//   &#x27;join&#x27;: [&#x27;lodash&#x27;, &#x27;join&#x27;]</span></span><br><span class="line">    <span class="comment">// &#125;),</span></span><br><span class="line">    <span class="comment">// new webpack.IgnorePlugin(/\.\/locale/, /moment/), // 忽略moment包里的locale文件夹</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HappyPack</span>(&#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&#x27;babel&#x27;</span>,</span><br><span class="line">      <span class="attr">loaders</span>: [<span class="string">&#x27;babel-loader?cacheDirectory&#x27;</span>], <span class="comment">// 开启编译缓存</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">optimization</span>: &#123;</span><br><span class="line">    <span class="attr">splitChunks</span>: &#123;  <span class="comment">// 代码分割</span></span><br><span class="line">      <span class="attr">chunks</span>: <span class="string">&#x27;all&#x27;</span>, <span class="comment">// 无论 同步引入 还是 异步引入 都要代码分割</span></span><br><span class="line">      <span class="attr">minSize</span>: <span class="number">20000</span>,</span><br><span class="line">      <span class="comment">// 把 第三方模块代码 拆分成vendors.js</span></span><br><span class="line">      <span class="attr">cacheGroups</span>: &#123;</span><br><span class="line">        <span class="attr">vendors</span>: &#123;</span><br><span class="line">          <span class="attr">test</span>: <span class="regexp">/[\\/]node_modules[\\/]/</span>,</span><br><span class="line">          <span class="attr">priority</span>: -<span class="number">10</span>,</span><br><span class="line">          <span class="attr">reuseExistingChunk</span>: <span class="literal">true</span>, <span class="comment">// 已存在chunk进行复用</span></span><br><span class="line">          <span class="attr">filename</span>: <span class="string">&#x27;vendors.js&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// default: &#123;</span></span><br><span class="line">      <span class="comment">//   minChunks: 2,</span></span><br><span class="line">      <span class="comment">//   priority: -20, // 优先级</span></span><br><span class="line">      <span class="comment">//   reuseExistingChunk: true</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>webpack.dev.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">VueLoaderPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;vue-loader/lib/plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Webpack</span> = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> distPath = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;dist&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 公共配置</span></span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">&#x27;./webpack.base&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预先打包</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">DllReferencePlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;webpack/lib/DllReferencePlugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开发环境配置</span></span><br><span class="line"><span class="keyword">const</span> devConfig = &#123;</span><br><span class="line">  <span class="attr">watch</span>: <span class="literal">true</span>, <span class="comment">// 监听任何已解析文件的更改,Watch 模式默认开启</span></span><br><span class="line">  <span class="attr">watchOptions</span>: &#123;</span><br><span class="line">    <span class="attr">ignored</span>: <span class="regexp">/node_modules/</span>,</span><br><span class="line">    <span class="attr">aggregateTimeout</span>: <span class="number">600</span>, <span class="comment">// 延迟编译</span></span><br><span class="line">    <span class="attr">poll</span>: <span class="number">1000</span> <span class="comment">// Boolean:true 轮询检查变动  1000 + 600 = 1.6s</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">  <span class="attr">devtool</span>: <span class="string">&#x27;cheap-module-eval-source-map&#x27;</span>, <span class="comment">// production: devtool: &#x27;cheap-module-source-map&#x27;</span></span><br><span class="line">  <span class="attr">devServer</span>: &#123; <span class="comment">// 开发环境有效</span></span><br><span class="line">    <span class="comment">// secure: false, // https 专用</span></span><br><span class="line">    <span class="attr">contentBase</span>: <span class="string">&#x27;./dist&#x27;</span>,</span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span>, <span class="comment">// 打开默认浏览器</span></span><br><span class="line">    <span class="attr">hot</span>: <span class="literal">true</span>, <span class="comment">// 热更新</span></span><br><span class="line">    <span class="attr">port</span>: <span class="number">1023</span>,<span class="comment">// 运行端口</span></span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="comment">// context: [&#x27;/api1&#x27;, &#x27;api2&#x27;], // 多个路径请求转发</span></span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:3333&#x27;</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123; <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span> &#125;,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      <span class="comment">// &#123;</span></span><br><span class="line">      <span class="comment">//   test: /\.m?js$/,</span></span><br><span class="line">      <span class="comment">//   use: &#123;</span></span><br><span class="line">      <span class="comment">//     loader: &quot;babel-loader&quot;,</span></span><br><span class="line">      <span class="comment">//     options: &#123;</span></span><br><span class="line">      <span class="comment">//       cacheDirectory: true // 缓存优化</span></span><br><span class="line">      <span class="comment">//     &#125;</span></span><br><span class="line">      <span class="comment">//   &#125;,</span></span><br><span class="line">      <span class="comment">//   exclude: /node_modules/,// 处理范围不包括 | include</span></span><br><span class="line">      <span class="comment">// &#125;,</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(css)$/</span>,</span><br><span class="line">        <span class="comment">// loader 执行顺序，从后往前，从下往上</span></span><br><span class="line">        <span class="attr">use</span>: [</span><br><span class="line">          <span class="string">&#x27;style-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;postcss-loader&#x27;</span>,</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">optimization</span>: &#123;</span><br><span class="line">    <span class="attr">usedExports</span>: <span class="literal">true</span> <span class="comment">// 按需导入 tree shaking</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Webpack</span>.<span class="title class_">HotModuleReplacementPlugin</span>(),</span><br><span class="line">    <span class="comment">// new VueLoaderPlugin(),</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">DllReferencePlugin</span>(&#123;</span><br><span class="line">      <span class="attr">manifest</span>: <span class="built_in">require</span>(path.<span class="title function_">join</span>(distPath, <span class="string">&#x27;_vendor.mainfest.json&#x27;</span>))</span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="comment">// publicPath: &#x27;https://www.bootcdn.cn/&#x27;, // cdn优化</span></span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;[name].js&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../dist&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">merge</span>(devConfig, baseConfig)</span><br></pre></td></tr></table></figure><ul><li>webpack.dll.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拆分 bundles</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">DllPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;webpack/lib/DllPlugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> distPath = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;dist&#x27;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">  <span class="attr">entry</span>: &#123;</span><br><span class="line">    <span class="comment">// The library to be extracted (需要提取的库)</span></span><br><span class="line">    <span class="attr">_vendor</span>: [<span class="string">&#x27;lodash&#x27;</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="comment">// 打包生成的 bundle 的名字 _vendor.dll.js</span></span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;[name].dll.js&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>: distPath,</span><br><span class="line">    <span class="comment">// 保持与 webpack.DllPlugin 中名称一致</span></span><br><span class="line">    <span class="comment">// 全局变量 _dll__vendor</span></span><br><span class="line">    <span class="attr">library</span>: <span class="string">&#x27;_dll_[name]&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">DllPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;_dll_[name]&#x27;</span>,</span><br><span class="line">      <span class="comment">// 生成一个文件 _vendor.manifest.json</span></span><br><span class="line">      <span class="attr">path</span>: path.<span class="title function_">join</span>(distPath, <span class="string">&#x27;[name].mainfest.json&#x27;</span>) <span class="comment">// 映射文件</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>webpack.pro.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 公共配置</span></span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">&#x27;./webpack.base&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// CSS代码分割</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MiniCssExtractPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>)</span><br><span class="line"><span class="comment">// CSS代码压缩</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CssMinimizerPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;css-minimizer-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生产环境配置</span></span><br><span class="line"><span class="keyword">const</span> proConfig = &#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;production&#x27;</span>,</span><br><span class="line">  <span class="comment">// devtool: &#x27;cheap-module-source-map&#x27;, // production: devtool: &#x27;cheap-module-source-map&#x27;</span></span><br><span class="line">  <span class="attr">devServer</span>: &#123; <span class="comment">// 开发环境有效</span></span><br><span class="line">    <span class="comment">// secure: false, // https 专用</span></span><br><span class="line">    <span class="attr">contentBase</span>: <span class="string">&#x27;./dist&#x27;</span>,</span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span>, <span class="comment">// 打开默认浏览器</span></span><br><span class="line">    <span class="comment">// hot: true, // 热更新</span></span><br><span class="line">    <span class="attr">port</span>: <span class="number">1023</span>,<span class="comment">// 运行端口</span></span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="comment">// context: [&#x27;/api1&#x27;, &#x27;api2&#x27;], // 多个路径请求转发</span></span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:3333&#x27;</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123; <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span> &#125;,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(css)$/</span>,</span><br><span class="line">        <span class="comment">// loader 执行顺序，从后往前，从下往上</span></span><br><span class="line">        <span class="attr">use</span>: [</span><br><span class="line">          <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,</span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;postcss-loader&#x27;</span>,</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(),</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">optimization</span>: &#123;</span><br><span class="line">    <span class="comment">// minimize: true, // production mode 自动开启</span></span><br><span class="line">    <span class="attr">splitChunks</span>: &#123;</span><br><span class="line">      <span class="attr">cacheGroups</span>: &#123;</span><br><span class="line">        <span class="attr">styles</span>: &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;styles&#x27;</span>,</span><br><span class="line">          <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">          <span class="attr">chunks</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">          <span class="attr">enforce</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">minimizer</span>: [</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>()</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;[name].[contenthash:8].js&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../dist&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">merge</span>(proConfig, baseConfig)</span><br></pre></td></tr></table></figure><ul><li>package.json</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack-try&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sideEffects&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;@babel/polyfill&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;*.css&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack4 | node 12.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;build:dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack --config ./build/webpack.dev.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build:pro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack --config ./build/webpack.pro.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack-dev-server --config ./build/webpack.dev.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dll&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack --config ./build/webpack.dll.js&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;browserslist&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;&gt; 1%&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;last 2 versions&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@babel/core&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.12.10&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@babel/plugin-transform-runtime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.22.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@babel/preset-env&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.12.11&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;autoprefixer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^10.4.14&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babel-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.2.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;clean-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;css-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;css-minimizer-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;file-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;happypack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.5.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lodash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.17.21&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mini-css-extract-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.3.9&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;node-sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;postcss-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sass-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^10.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;style-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.41.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.10&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-dev-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.11.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-merge&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.7.3&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@babel/polyfill&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.12.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@babel/runtime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.22.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@babel/runtime-corejs3&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.22.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;core-js&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.8.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.5.16&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^15.2.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-template-compiler&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.5.16&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>.babelrc</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;presets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="comment">// 预设 插件 二选一</span></span><br><span class="line">    <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;@babel/preset-env&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;useBuiltIns&quot;</span><span class="punctuation">:</span> <span class="string">&quot;usage&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;corejs&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line">  <span class="comment">// &quot;plugins&quot;: [</span></span><br><span class="line">  <span class="comment">// [</span></span><br><span class="line">  <span class="comment">//   &quot;@babel/plugin-transform-runtime&quot;,</span></span><br><span class="line">  <span class="comment">//   &#123;</span></span><br><span class="line">  <span class="comment">//     &quot;absoluteRuntime&quot;: false,</span></span><br><span class="line">  <span class="comment">//     &quot;corejs&quot;: 3,</span></span><br><span class="line">  <span class="comment">//     &quot;helpers&quot;: true,</span></span><br><span class="line">  <span class="comment">//     &quot;regenerator&quot;: true,</span></span><br><span class="line">  <span class="comment">//     &quot;version&quot;: &quot;7.0.0-beta.0&quot;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// ]</span></span><br><span class="line">  <span class="comment">// ]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;浏览器厂商前缀&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;&amp;quot;browserslist&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;gt; 1%&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;last 2 versions&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Webpack" scheme="http://example.com/categories/Webpack/"/>
    
    
    <category term="Webpack" scheme="http://example.com/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Responsive Waterfall Layout</title>
    <link href="http://example.com/2023/05/20/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/"/>
    <id>http://example.com/2023/05/20/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/</id>
    <published>2023-05-20T14:38:33.772Z</published>
    <updated>2023-05-21T13:17:16.423Z</updated>
    
    <content type="html"><![CDATA[<p><strong>响应式瀑布流布局</strong></p><p>(细节版~)</p><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Waterfall Layout<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/style.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Responsive Waterfall Layout<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;cells&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;loader&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>loading<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>index.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isTestDemo = isTestDemo || <span class="literal">false</span>;</span><br><span class="line">isTestDemo = <span class="literal">true</span></span><br><span class="line"><span class="keyword">void</span> <span class="keyword">function</span> (<span class="params"><span class="variable language_">window</span>, <span class="variable language_">document</span>, <span class="literal">undefined</span></span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ES5 strict mode</span></span><br><span class="line">  <span class="string">&quot;user strict&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> <span class="variable constant_">MIN_COLUMN_COUNT</span> = <span class="number">3</span>; <span class="comment">// 最小列数</span></span><br><span class="line">  <span class="keyword">var</span> <span class="variable constant_">COLUMN_WIDTH</span> = <span class="number">220</span>;   <span class="comment">// 每个item宽度</span></span><br><span class="line">  <span class="keyword">var</span> <span class="variable constant_">CELL_PADDING</span> = <span class="number">26</span>;    <span class="comment">// 每个item内边距</span></span><br><span class="line">  <span class="keyword">var</span> <span class="variable constant_">GAP_HEIGHT</span> = <span class="number">15</span>;      <span class="comment">// 每个item之间的垂直间距</span></span><br><span class="line">  <span class="keyword">var</span> <span class="variable constant_">GAP_WIDTH</span> = <span class="number">15</span>;      <span class="comment">// 每个item之间的水平间隙</span></span><br><span class="line">  <span class="keyword">var</span> <span class="variable constant_">THRESHOLD</span> = <span class="number">2000</span>;     <span class="comment">// 确定item是否离视口太远(px)</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> columnHeights;        <span class="comment">// 每个列的高度的数组</span></span><br><span class="line">  <span class="keyword">var</span> columnCount;          <span class="comment">// 列数</span></span><br><span class="line">  <span class="keyword">var</span> noticeDelay;          <span class="comment">// 弹出通知计时器</span></span><br><span class="line">  <span class="keyword">var</span> resizeDelay;          <span class="comment">// 视口变化</span></span><br><span class="line">  <span class="keyword">var</span> scrollDelay;          <span class="comment">// 滚动变化</span></span><br><span class="line">  <span class="keyword">var</span> managing = <span class="literal">false</span>;     <span class="comment">// 管理状态</span></span><br><span class="line">  <span class="keyword">var</span> loading = <span class="literal">false</span>;      <span class="comment">// 加载状态</span></span><br><span class="line">  <span class="keyword">var</span> appendCellsNum = <span class="number">0</span>    <span class="comment">// 请求次数</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> noticeContainer = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;notice&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> cellsContainer = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;cells&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 跨浏览器兼容</span></span><br><span class="line">  <span class="keyword">var</span> addEvent = <span class="keyword">function</span> (<span class="params">el, type, fn</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (el.<span class="property">addEventListener</span>) &#123;</span><br><span class="line">      el.<span class="title function_">addEventListener</span>(type, fn, <span class="literal">false</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (el.<span class="property">attachEvent</span>) &#123;</span><br><span class="line">      el.<span class="title function_">attachEvent</span>(<span class="string">&#x27;on&#x27;</span> + type, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        fn.<span class="title function_">call</span>(el)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      el[<span class="string">&#x27;on&#x27;</span> + type] = fn</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取数组中的最小值</span></span><br><span class="line">  <span class="keyword">var</span> getMinVal = <span class="keyword">function</span> (<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="property">min</span>.<span class="title function_">apply</span>(<span class="title class_">Math</span>, arr);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取数组中的最大值</span></span><br><span class="line">  <span class="keyword">var</span> getMaxVal = <span class="keyword">function</span> (<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="title class_">Math</span>, arr);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取数字数组中最小值的索引</span></span><br><span class="line">  <span class="keyword">var</span> getMinKey = <span class="keyword">function</span> (<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> key = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> min = arr[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>, len = arr.<span class="property">length</span>; i &lt; len; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[i] &lt; min) &#123;</span><br><span class="line">        key = i;</span><br><span class="line">        min = arr[i];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> key;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取数字数组中最大值的索引</span></span><br><span class="line">  <span class="keyword">var</span> getMaxKey = <span class="keyword">function</span> (<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> key = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> max = arr[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>, len = arr.<span class="property">length</span>; i &lt; len; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[i] &gt; max) &#123;</span><br><span class="line">        key = i;</span><br><span class="line">        max = arr[i];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> key;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 从当前页面宽度计算列数</span></span><br><span class="line">  <span class="keyword">var</span> getColumnCount = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="variable constant_">MIN_COLUMN_COUNT</span>, <span class="title class_">Math</span>.<span class="title function_">floor</span>((<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">offsetWidth</span> + <span class="variable constant_">GAP_WIDTH</span>) / (<span class="variable constant_">COLUMN_WIDTH</span> + <span class="variable constant_">GAP_WIDTH</span>)));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 重置列高度和容器宽度的数组</span></span><br><span class="line">  <span class="keyword">var</span> resetHeights = <span class="keyword">function</span> (<span class="params">count</span>) &#123;</span><br><span class="line">    columnHeights = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">      columnHeights.<span class="title function_">push</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cellsContainer.<span class="property">style</span>.<span class="property">width</span> = (count * (<span class="variable constant_">COLUMN_WIDTH</span> + <span class="variable constant_">GAP_WIDTH</span>) - <span class="variable constant_">GAP_WIDTH</span>) + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Test MODE</span></span><br><span class="line">  <span class="keyword">var</span> appendCellsDemo = <span class="keyword">function</span> (<span class="params">num</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (loading) &#123;</span><br><span class="line">      <span class="comment">// Avoid sending too many requests to get new cells.</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> fragment = <span class="variable language_">document</span>.<span class="title function_">createDocumentFragment</span>();</span><br><span class="line">    <span class="keyword">var</span> cells = [];</span><br><span class="line">    <span class="keyword">var</span> images = [<span class="number">0</span>, <span class="number">286</span>, <span class="number">143</span>, <span class="number">270</span>, <span class="number">143</span>, <span class="number">190</span>, <span class="number">285</span>, <span class="number">152</span>, <span class="number">275</span>, <span class="number">285</span>, <span class="number">285</span>, <span class="number">128</span>, <span class="number">281</span>, <span class="number">242</span>, <span class="number">339</span>, <span class="number">236</span>, <span class="number">157</span>, <span class="number">286</span>, <span class="number">259</span>, <span class="number">267</span>, <span class="number">137</span>, <span class="number">253</span>, <span class="number">127</span>, <span class="number">190</span>, <span class="number">190</span>, <span class="number">225</span>, <span class="number">269</span>, <span class="number">264</span>, <span class="number">272</span>, <span class="number">126</span>, <span class="number">265</span>, <span class="number">287</span>, <span class="number">269</span>, <span class="number">125</span>, <span class="number">285</span>, <span class="number">190</span>, <span class="number">314</span>, <span class="number">141</span>, <span class="number">119</span>, <span class="number">274</span>, <span class="number">274</span>, <span class="number">285</span>, <span class="number">126</span>, <span class="number">279</span>, <span class="number">143</span>, <span class="number">266</span>, <span class="number">279</span>, <span class="number">600</span>, <span class="number">276</span>, <span class="number">285</span>, <span class="number">182</span>, <span class="number">143</span>, <span class="number">287</span>, <span class="number">126</span>, <span class="number">190</span>, <span class="number">285</span>, <span class="number">143</span>, <span class="number">241</span>, <span class="number">166</span>, <span class="number">240</span>, <span class="number">190</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; num; j++) &#123;</span><br><span class="line">      <span class="keyword">var</span> key = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">60</span>) + <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">var</span> cell = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">      cell.<span class="property">className</span> = <span class="string">&#x27;cell pending&#x27;</span>;</span><br><span class="line">      cells.<span class="title function_">push</span>(cell);</span><br><span class="line">      cell.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;p&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;express/img/<span class="subst">$&#123;key&#125;</span>.jpg&quot; height=&quot;<span class="subst">$&#123;images[key]&#125;</span>&quot; width=&quot;190&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">      `</span></span><br><span class="line">      fragment.<span class="title function_">appendChild</span>(cell);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 模拟网络延迟</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      loading = <span class="literal">false</span>;</span><br><span class="line">      cellsContainer.<span class="title function_">appendChild</span>(fragment);</span><br><span class="line">      <span class="title function_">adjustCells</span>(cells);</span><br><span class="line">    &#125;, <span class="number">2000</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过Ajax获取JSON字符串，解析为HTML并附加到容器中</span></span><br><span class="line">  <span class="keyword">var</span> appendCells = <span class="keyword">function</span> (<span class="params">num</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (appendCellsNum * columnCount + columnCount + columnCount &gt; <span class="number">60</span>) &#123;</span><br><span class="line">      appendCellsNum = <span class="number">1</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      appendCellsNum += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (loading) &#123;</span><br><span class="line">      <span class="comment">// 节流</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> xhrRequest = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    <span class="keyword">var</span> fragment = <span class="variable language_">document</span>.<span class="title function_">createDocumentFragment</span>();</span><br><span class="line">    <span class="keyword">var</span> cells = [];</span><br><span class="line">    <span class="keyword">var</span> images;</span><br><span class="line">    xhrRequest.<span class="title function_">open</span>(<span class="string">&#x27;POST&#x27;</span>, <span class="string">`http://localhost:3000/getFileList`</span>, <span class="literal">true</span>);</span><br><span class="line">    xhrRequest.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json&#x27;</span>);</span><br><span class="line">    xhrRequest.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhrRequest.<span class="property">readyState</span> == <span class="number">4</span> &amp;&amp; xhrRequest.<span class="property">status</span> == <span class="number">200</span>) &#123;</span><br><span class="line">        images = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhrRequest.<span class="property">response</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, k = images.<span class="property">length</span>; j &lt; k; j++) &#123;</span><br><span class="line">          <span class="keyword">var</span> cell = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">          cell.<span class="property">className</span> = <span class="string">&#x27;cell pending&#x27;</span>;</span><br><span class="line">          cells.<span class="title function_">push</span>(cell);</span><br><span class="line">          cell.<span class="property">innerHTML</span> = <span class="string">`&lt;img src=&quot;<span class="subst">$&#123;<span class="built_in">JSON</span>.parse(images[j]).imgSrc&#125;</span>&quot;&gt;`</span></span><br><span class="line">          fragment.<span class="title function_">appendChild</span>(cell);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// &lt;p&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;img/$&#123;images[j].src&#125;.jpg&quot; height=&quot;$&#123;images[j].height&#125;&quot; width=&quot;$&#123;images[j].width&#125;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</span></span><br><span class="line">        cellsContainer.<span class="title function_">appendChild</span>(fragment);</span><br><span class="line">        loading = <span class="literal">false</span>;</span><br><span class="line">        <span class="title function_">adjustCells</span>(cells);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    loading = <span class="literal">true</span>;</span><br><span class="line">    xhrRequest.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">      <span class="attr">start</span>: appendCellsNum * columnCount,</span><br><span class="line">      <span class="attr">count</span>: num</span><br><span class="line">    &#125;));</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * file转base64</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">fileToDataUrl</span>(<span class="params">file</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>()</span><br><span class="line">      reader.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="comment">// resolve(evt.target.result)</span></span><br><span class="line">        <span class="keyword">let</span> data</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> e.<span class="property">target</span>.<span class="property">result</span> === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">          data = <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">createObjectURL</span>(<span class="keyword">new</span> <span class="title class_">Blob</span>([e.<span class="property">target</span>.<span class="property">result</span>]))</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          data = e.<span class="property">target</span>.<span class="property">result</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">resolve</span>(data)</span><br><span class="line">      &#125;</span><br><span class="line">      reader.<span class="title function_">readAsDataURL</span>(file)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定位新附加的单元格并更新列高度数组</span></span><br><span class="line">  <span class="keyword">var</span> adjustCells = <span class="keyword">function</span> (<span class="params">cells, reflow</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> columnIndex;</span><br><span class="line">    <span class="keyword">var</span> columnHeight;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, k = cells.<span class="property">length</span>; j &lt; k; j++) &#123;</span><br><span class="line">      <span class="comment">// 新item添加到最小高度的列中</span></span><br><span class="line">      columnIndex = <span class="title function_">getMinKey</span>(columnHeights);</span><br><span class="line">      columnHeight = columnHeights[columnIndex];</span><br><span class="line">      cells[j].<span class="property">style</span>.<span class="property">height</span> = (cells[j].<span class="property">offsetHeight</span> - <span class="variable constant_">CELL_PADDING</span>) + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">      cells[j].<span class="property">style</span>.<span class="property">left</span> = columnIndex * (<span class="variable constant_">COLUMN_WIDTH</span> + <span class="variable constant_">GAP_WIDTH</span>) + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">      cells[j].<span class="property">style</span>.<span class="property">top</span> = columnHeight + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">      <span class="comment">// 更新添加后的列高数组</span></span><br><span class="line">      columnHeights[columnIndex] = columnHeight + <span class="variable constant_">GAP_HEIGHT</span> + cells[j].<span class="property">offsetHeight</span>;</span><br><span class="line">      <span class="keyword">if</span> (!reflow) &#123;</span><br><span class="line">        cells[j].<span class="property">className</span> = <span class="string">&#x27;cell ready&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cellsContainer.<span class="property">style</span>.<span class="property">height</span> = <span class="title function_">getMaxVal</span>(columnHeights) + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    <span class="title function_">manageCells</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 视口变化调整布局</span></span><br><span class="line">  <span class="keyword">var</span> reflowCells = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 计算视口变化后所能容下的最大列数</span></span><br><span class="line">    columnCount = <span class="title function_">getColumnCount</span>();</span><br><span class="line">    <span class="keyword">if</span> (columnHeights.<span class="property">length</span> != columnCount) &#123;</span><br><span class="line">      <span class="comment">// 重置列高度和容器宽度</span></span><br><span class="line">      <span class="title function_">resetHeights</span>(columnCount);</span><br><span class="line">      <span class="title function_">adjustCells</span>(cellsContainer.<span class="property">children</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">manageCells</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根据它们在视窗中的偏移量从DOM中切换旧单元格的内容，节省内存</span></span><br><span class="line">  <span class="comment">// 如果viewport中有空间，加载并追加新的item</span></span><br><span class="line">  <span class="keyword">var</span> manageCells = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 避免多发异步请求</span></span><br><span class="line">    managing = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> cells = cellsContainer.<span class="property">children</span>;</span><br><span class="line">    <span class="keyword">var</span> viewportTop = (<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>) - cellsContainer.<span class="property">offsetTop</span>; <span class="comment">// 滚动条滚动距离</span></span><br><span class="line">    <span class="keyword">var</span> viewportBottom = (<span class="variable language_">window</span>.<span class="property">innerHeight</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>) + viewportTop;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, l = cells.<span class="property">length</span>; i &lt; l; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> ((cells[i].<span class="property">offsetTop</span> - viewportBottom &gt; <span class="variable constant_">THRESHOLD</span>) || (viewportTop - cells[i].<span class="property">offsetTop</span> - cells[i].<span class="property">offsetHeight</span> &gt; <span class="variable constant_">THRESHOLD</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (cells[i].<span class="property">className</span> === <span class="string">&#x27;cell ready&#x27;</span>) &#123;</span><br><span class="line">          cells[i].<span class="property">fragment</span> = cells[i].<span class="property">innerHTML</span>;</span><br><span class="line">          cells[i].<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">          cells[i].<span class="property">className</span> = <span class="string">&#x27;cell shadow&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (cells[i].<span class="property">className</span> === <span class="string">&#x27;cell shadow&#x27;</span>) &#123;</span><br><span class="line">          cells[i].<span class="property">innerHTML</span> = cells[i].<span class="property">fragment</span>;</span><br><span class="line">          cells[i].<span class="property">className</span> = <span class="string">&#x27;cell ready&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前视口空间足够，则继续请求</span></span><br><span class="line">    <span class="keyword">if</span> (viewportBottom &gt; <span class="title function_">getMinVal</span>(columnHeights)) &#123;</span><br><span class="line">      <span class="comment">// 是否不模拟请求?</span></span><br><span class="line">      <span class="keyword">if</span> (isTestDemo) &#123;</span><br><span class="line">        <span class="title function_">appendCellsDemo</span>(columnCount);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">appendCells</span>(columnCount);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Unlock managing state.</span></span><br><span class="line">    managing = <span class="literal">false</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 滚动500ms节流</span></span><br><span class="line">  <span class="keyword">var</span> delayedScroll = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(scrollDelay);</span><br><span class="line">    <span class="keyword">if</span> (!managing) &#123;</span><br><span class="line">      scrollDelay = <span class="built_in">setTimeout</span>(manageCells, <span class="number">500</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 视口变化500ms节流</span></span><br><span class="line">  <span class="keyword">var</span> delayedResize = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(resizeDelay);</span><br><span class="line">    resizeDelay = <span class="built_in">setTimeout</span>(reflowCells, <span class="number">500</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化布局</span></span><br><span class="line">  <span class="keyword">var</span> init = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 添加系列监听事件</span></span><br><span class="line">    <span class="comment">// addEvent(cellsContainer, &#x27;click&#x27;, updateNotice);</span></span><br><span class="line">    <span class="title function_">addEvent</span>(<span class="variable language_">window</span>, <span class="string">&#x27;resize&#x27;</span>, delayedResize);</span><br><span class="line">    <span class="title function_">addEvent</span>(<span class="variable language_">window</span>, <span class="string">&#x27;scroll&#x27;</span>, delayedScroll);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化列高度和容器宽度的数组</span></span><br><span class="line">    columnCount = <span class="title function_">getColumnCount</span>();</span><br><span class="line">    <span class="title function_">resetHeights</span>(columnCount);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">manageCells</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// start to work</span></span><br><span class="line">  <span class="title function_">addEvent</span>(<span class="variable language_">window</span>, <span class="string">&#x27;load&#x27;</span>, init);</span><br><span class="line"></span><br><span class="line">&#125;(<span class="variable language_">window</span>, <span class="variable language_">document</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>通过express模拟后端服务，获取图片资源</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="comment">// 在服务端代码中引入 body-parser 中间件</span></span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置静态资源路径</span></span><br><span class="line"><span class="comment">// 使用express.static中间件 让服务器可以返回静态文件</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./img&#x27;</span>)))</span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&#x27;*&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&quot;*&quot;</span>)</span><br><span class="line">  res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>, <span class="string">&#x27;GEt,POST,PUT&#x27;</span>)</span><br><span class="line">  res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="string">&#x27;Content-Type&#x27;</span>)</span><br><span class="line">  res.<span class="title function_">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json&#x27;</span>)</span><br><span class="line">  req.<span class="title function_">next</span>()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 使用 body-parser 中间件，解析 application/json 格式的参数</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设定路由</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/getFileList&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> start = req.<span class="property">body</span>.<span class="property">start</span> || <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">const</span> count = req.<span class="property">body</span>.<span class="property">count</span> || <span class="number">8</span>;</span><br><span class="line">  <span class="keyword">const</span> _fileArr = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = start; i &lt; start + count; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> imgPath = __dirname + <span class="string">&#x27;/img/&#x27;</span> + i + <span class="string">&#x27;.jpg&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> imgBuffer = fs.<span class="title function_">readFileSync</span>(imgPath);</span><br><span class="line">    <span class="keyword">var</span> base64String = imgBuffer.<span class="title function_">toString</span>(<span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> imgSrcString = <span class="string">&#x27;data:image/jpeg;base64,&#x27;</span> + base64String; <span class="comment">// 拼接 data URI 格式</span></span><br><span class="line">    <span class="keyword">var</span> imgJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">imgSrc</span>: imgSrcString &#125;);</span><br><span class="line">    _fileArr.<span class="title function_">push</span>(imgJson)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">send</span>(_fileArr);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动服务器</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;getFileList app listening on port 3000!&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;响应式瀑布流布局&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(细节版~)&lt;/p&gt;</summary>
    
    
    
    <category term="Extensions" scheme="http://example.com/categories/Extensions/"/>
    
    
    <category term="Extensions" scheme="http://example.com/tags/Extensions/"/>
    
  </entry>
  
  <entry>
    <title>DingDing-Dashboard</title>
    <link href="http://example.com/2023/05/15/DingDing-Dashboard/"/>
    <id>http://example.com/2023/05/15/DingDing-Dashboard/</id>
    <published>2023-05-15T12:46:31.000Z</published>
    <updated>2023-05-15T12:52:56.392Z</updated>
    
    <content type="html"><![CDATA[<p><strong>钉钉首页滚动动画</strong></p><span id="more"></span><h3 id="index-html">index.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>DingDing<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;./index.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;playground&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;animation-container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-order</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="index-css">index.css</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.playground</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">6000px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content-container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1400px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.animation-container</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2000px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.list</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">560px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">70px</span>;  </span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">23</span>, <span class="number">26</span>, <span class="number">29</span>, .<span class="number">9</span>);</span><br><span class="line">  <span class="attribute">position</span>: sticky;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">20%</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.list-item</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.list-item</span><span class="selector-pseudo">:nth-child</span>(odd) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.list-item</span><span class="selector-pseudo">:nth-child</span>(even) &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="index-js">index.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> list = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;list&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">const</span> items = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;list-item&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> playGround = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;playground&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> contentContainer = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;content-container&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">const</span> animationContainer = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;animation-container&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createAnimation</span>(<span class="params">scrollStart, scrollEnd, valueStart, valueEnd</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">scroll</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (scroll &lt;= scrollStart) <span class="keyword">return</span> valueStart</span><br><span class="line">    <span class="keyword">if</span> (scroll &gt;= scrollEnd) <span class="keyword">return</span> valueEnd</span><br><span class="line">    <span class="keyword">return</span> (valueStart + ((valueEnd - valueStart) * (scroll - scrollStart)) / (scrollEnd - scrollStart))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> animationMap = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getDomAnimation</span>(<span class="params">scrollStart, scrollEnd, dom</span>) &#123;</span><br><span class="line">  scrollStart = scrollStart + dom.<span class="property">dataset</span>.<span class="property">order</span> * <span class="number">200</span></span><br><span class="line">  <span class="keyword">const</span> opacityAnimation = <span class="title function_">createAnimation</span>(scrollStart, scrollEnd, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">const</span> opacity = <span class="keyword">function</span> (<span class="params">scroll</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">opacityAnimation</span>(scroll)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> scaleAnimation = <span class="title function_">createAnimation</span>(scrollStart, scrollEnd, <span class="number">0.5</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">const</span> xAnimation = <span class="title function_">createAnimation</span>(scrollStart, scrollEnd, list.<span class="property">clientWidth</span> / <span class="number">2</span> - dom.<span class="property">offsetLeft</span> - dom.<span class="property">clientWidth</span> / <span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">  <span class="keyword">const</span> yAnimation = <span class="title function_">createAnimation</span>(scrollStart, scrollEnd, list.<span class="property">clientHeight</span> / <span class="number">2</span> - dom.<span class="property">offsetTop</span> - dom.<span class="property">clientHeight</span> / <span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> transform = <span class="keyword">function</span> (<span class="params">scroll</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`translate(<span class="subst">$&#123;xAnimation(scroll)&#125;</span>px,<span class="subst">$&#123;yAnimation(scroll)&#125;</span>px) scale(<span class="subst">$&#123;scaleAnimation(scroll)&#125;</span>)`</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    opacity,</span><br><span class="line">    transform</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateMap</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 浏览器比例缩放等重置</span></span><br><span class="line">  animationMap.<span class="title function_">clear</span>()</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;contentContainer: &#x27;</span>, <span class="title function_">getStyles</span>(contentContainer, <span class="string">&#x27;height&#x27;</span>), <span class="variable language_">window</span>.<span class="property">scrollY</span>);</span><br><span class="line">  <span class="keyword">const</span> scrollStart = <span class="title function_">getStyles</span>(contentContainer, <span class="string">&#x27;height&#x27;</span>) - <span class="number">630</span></span><br><span class="line">  <span class="keyword">const</span> scrollEnd = <span class="title function_">getStyles</span>(contentContainer, <span class="string">&#x27;height&#x27;</span>) + <span class="title function_">getStyles</span>(animationContainer, <span class="string">&#x27;height&#x27;</span>)</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> items) &#123;</span><br><span class="line">    animationMap.<span class="title function_">set</span>(item, <span class="title function_">getDomAnimation</span>(scrollStart, scrollEnd, item))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateStyles</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> scroll = <span class="variable language_">window</span>.<span class="property">scrollY</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> [dom, value] <span class="keyword">of</span> animationMap) &#123;</span><br><span class="line">    <span class="comment">// console.log(value.transform(scroll), &#x27;333&#x27;)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> cssProps <span class="keyword">in</span> value) &#123;</span><br><span class="line">      dom.<span class="property">style</span>[cssProps] = value[cssProps](scroll)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">updateMap</span>()</span><br><span class="line"><span class="title function_">updateStyles</span>()</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, updateStyles)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getScrollOffset</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">pageXOffset</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">left</span>: <span class="variable language_">window</span>.<span class="property">pageXOffset</span>, <span class="comment">// scrollX</span></span><br><span class="line">      <span class="attr">top</span>: <span class="variable language_">window</span>.<span class="property">pageYOffset</span>   <span class="comment">// scrollY</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">left</span>: <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollLeft</span> + <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollLeft</span>,</span><br><span class="line">      <span class="attr">top</span>: <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span> + <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 元素内容尺寸</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getStyles</span>(<span class="params">ele, props</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">getComputedStyle</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (props) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">parseInt</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(ele, <span class="literal">null</span>)[props])</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(ele, <span class="literal">null</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (props) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">parseInt</span>(ele.<span class="property">currentStyle</span>[props])</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> ele.<span class="property">currentStyle</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;钉钉首页滚动动画&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Extensions" scheme="http://example.com/categories/Extensions/"/>
    
    
    <category term="Extensions" scheme="http://example.com/tags/Extensions/"/>
    
  </entry>
  
  <entry>
    <title>跨域获取数据</title>
    <link href="http://example.com/2023/04/10/%E8%B7%A8%E5%9F%9F%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE/"/>
    <id>http://example.com/2023/04/10/%E8%B7%A8%E5%9F%9F%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE/</id>
    <published>2023-04-10T13:53:50.000Z</published>
    <updated>2023-04-10T13:54:18.839Z</updated>
    
    <content type="html"><![CDATA[<ul><li>服务器中转请求<ul><li>同源策略只针对浏览器（客户端）</li><li>通过同源服务器向不同源服务器发起请求数据</li></ul></li><li>设置基础域名+<code>IFRAME</code><ul><li>前提是基础域名必须一致</li><li><code>document.domain </code>= ‘’<ul><li>当前网页所在的服务器域名</li></ul></li></ul></li></ul><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ajaxDomain = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">createIframe</span>(<span class="params">frameId, frameUrl</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> frame = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line">    frame.<span class="property">src</span> = frameUrl</span><br><span class="line">    frame.<span class="property">id</span> = frameId</span><br><span class="line">    frame.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> frame</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">opt</span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">domain</span> = opt.<span class="property">basicDomain</span>;</span><br><span class="line">    <span class="keyword">var</span> frame = <span class="title function_">createIframe</span>(opt.<span class="property">frameId</span>, opt.<span class="property">frameUrl</span>)</span><br><span class="line">    frame.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> $$ = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(opt.<span class="property">frameId</span>).<span class="property">contentWindow</span>.<span class="property">$</span>;</span><br><span class="line"></span><br><span class="line">      $$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: opt.<span class="property">url</span>,</span><br><span class="line">        <span class="attr">type</span>: opt.<span class="property">type</span>,</span><br><span class="line">        <span class="attr">data</span>: opt.<span class="property">data</span>,</span><br><span class="line">        <span class="attr">success</span>: opt.<span class="property">success</span>,</span><br><span class="line">        <span class="attr">error</span>: opt.<span class="property">error</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(frame)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><ul><li><code>window.name</code> + <code>iframe</code><ul><li>每个浏览器窗口都有一个全局变量window（包含<code>iframe</code>框架<code>contentWindow</code>）</li><li>每个window对象都有一个name属性（<strong>一个窗口只有一个name属性</strong>）</li><li>该窗口被关闭前（生命周期内），所有页面共享一个name属性并有读写的权限</li><li>无论该窗口在被关闭前，载入什么页面，都不会改变name值</li><li>存储约为2M的字符串</li><li>如果父级窗口地址源和iframe的地址源不同，父级无法通过iframe.contentWindow.name获取值，但iframe内部不受该限制规则影响<ul><li>解决方案：<a href="http://xn--iframewindow-bb5sj4fr8ezsh03m5s7az0mty0j2qpvn5glmuctnf.name">可以先让iframe中的页面程序保存window.name</a>,然后跳转到父级窗口同源的另一个页面，<a href="http://xn--iframewindow-xz6s7ji05bcna92uzr1druony5eu5s624bdx1dkvzcoa842epa.name">父级页面可以从当前iframe拿到该页面的window.name</a></li></ul></li></ul></li><li><code>postMessage</code>+<code>iframe</code><ul><li>otherWindow.postMessage(data,targetOrigin)<ul><li>otherWindow：接收方的引用</li><li>data：要传递的数据</li><li>targetOrigin：接收方的源，还必须要监听data事件<ul><li>window.onmessage = function(){}</li></ul></li></ul></li></ul></li><li><code>hash</code>+<code>iframe</code><ul><li>利用url的hash值#xxx来传递数据</li><li>location.hash</li></ul></li><li>cors跨域<ul><li>header(“Access-Control-Allow-Origin:*”)</li></ul></li><li>JSONP跨域</li></ul>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;服务器中转请求
&lt;ul&gt;
&lt;li&gt;同源策略只针对浏览器（客户端）&lt;/li&gt;
&lt;li&gt;通过同源服务器向不同源服务器发起请求数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设置基础域名+&lt;code&gt;IFRAME&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;前提是基础域名必须一致&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.domain &lt;/code&gt;= ‘’
&lt;ul&gt;
&lt;li&gt;当前网页所在的服务器域名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Ajax" scheme="http://example.com/categories/Ajax/"/>
    
    
    <category term="Ajax" scheme="http://example.com/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>Ajax</title>
    <link href="http://example.com/2023/04/10/Ajax/"/>
    <id>http://example.com/2023/04/10/Ajax/</id>
    <published>2023-04-10T13:52:14.000Z</published>
    <updated>2023-04-10T13:53:22.392Z</updated>
    
    <content type="html"><![CDATA[<ul><li><strong>XMLHttpRequest对象 | ActiveX对象</strong><ul><li>Js引擎内置的构造函数</li><li>var xhr = new XMLHttpRuquest()</li><li>兼容性：IE5/IE6试用ActiveX对象</li><li>var xhr = new ActiveXObject(‘Microsoft.XMLHTTP’)</li><li>onreadystatechange事件：挂载到XMLHttpRequest对象上的事件</li><li>readyState状态：通过XMLHttpRequest对象发送HTTP请求的各阶段状态码</li><li>status：服务器响应的状态码</li></ul></li></ul><span id="more"></span><ul><li>当readyState变化时，将触发onreadystatechange事件执行其回调函数<ul><li>0：请求未初始化</li><li>1：服务器建立已连接</li><li>2：请求已接收</li><li>3：请求处理中</li><li>4：请求已完成，且响应已就绪</li><li>readyState仅仅是针对请求的状态码，获取资源是否成功取决于status的状态</li></ul></li><li>xhr.setRequestHeader(“Content-type”,&quot;application/x-www-form-unlencoded’)<ul><li>POST请求方式必须设置这个请求头信息，目的是请求体中的数据转换位键值对</li></ul></li><li><strong>原生ajax封装</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = (<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">_doAjax</span>(<span class="params">opt</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> o = <span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span> ? </span><br><span class="line">          <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>() :</span><br><span class="line">          <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&#x27;Microsoft.XMLHTTP&#x27;</span>);</span><br><span class="line">       </span><br><span class="line">    <span class="keyword">if</span>(!o)&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;您的浏览器不支持异步发起HTTP请求&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> opt = opt || &#123;&#125;,</span><br><span class="line">        type = (opt.<span class="property">type</span> || <span class="string">&#x27;GET&#x27;</span>).<span class="title function_">toUpperCase</span>(),</span><br><span class="line">        <span class="keyword">async</span> = <span class="string">&#x27;&#x27;</span> + opt.<span class="property">async</span> === <span class="string">&#x27;false&#x27;</span> ? <span class="literal">false</span> : <span class="literal">true</span>,</span><br><span class="line">        dataType = opt.<span class="property">dataType</span> || <span class="string">&#x27;JSON&#x27;</span>,</span><br><span class="line">        jsonp = opt.<span class="property">jsonp</span> || <span class="string">&#x27;cb&#x27;</span>,</span><br><span class="line">        jsonpCallback = opt.<span class="property">jsonpCallback</span> || <span class="string">&#x27;jQuery&#x27;</span> + <span class="title function_">randomNum</span>() + <span class="string">&#x27;_&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">        url = opt.<span class="property">url</span>,</span><br><span class="line">        data = opt.<span class="property">data</span> || <span class="literal">null</span>,</span><br><span class="line">        timeout = opt.<span class="property">timeout</span> || <span class="number">30000</span>,</span><br><span class="line">        error = opt.<span class="property">error</span> || <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,</span><br><span class="line">        success = opt.<span class="property">success</span> || <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,</span><br><span class="line">        complete = opt.<span class="property">complete</span> || <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,</span><br><span class="line">        t = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!url)&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;您没有填写URL&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(dataType.<span class="title function_">toUpperCase</span>() === <span class="string">&#x27;JSONP&#x27;</span> &amp;&amp; type !== <span class="string">&#x27;GET&#x27;</span>)&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;如果dataType为JSONP，type请您设置GET或不设置&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(dataType.<span class="title function_">toUpperCase</span>() === <span class="string">&#x27;JSONP&#x27;</span>)&#123;</span><br><span class="line">      <span class="keyword">var</span> oScript = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">      oScript.<span class="property">src</span> = url.<span class="title function_">indexOf</span>(<span class="string">&#x27;?&#x27;</span>) === -<span class="number">1</span>  </span><br><span class="line">                        ? url + <span class="string">&#x27;?&#x27;</span> + jsonp + <span class="string">&#x27;=&#x27;</span> + jsonpCallback</span><br><span class="line">                        : url + <span class="string">&#x27;&amp;&#x27;</span> + jsonp + <span class="string">&#x27;=&#x27;</span> + jsonpCallback;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(oScript);</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(oScript);</span><br><span class="line">      <span class="variable language_">window</span>[jsonpCallback] = <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">        <span class="title function_">success</span>(data);</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    o.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(o.<span class="property">readyState</span> === <span class="number">4</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>((o.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; o.<span class="property">status</span> &lt; <span class="number">300</span>) || o.<span class="property">status</span> === <span class="number">304</span>)&#123;</span><br><span class="line">          <span class="keyword">switch</span>(dataType.<span class="title function_">toUpperCase</span>())&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;JSON&#x27;</span>:</span><br><span class="line">              <span class="title function_">success</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(o.<span class="property">responseText</span>)); </span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;TEXT&#x27;</span>:</span><br><span class="line">              <span class="title function_">success</span>(o.<span class="property">responseText</span>);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;XML&#x27;</span>:</span><br><span class="line">              <span class="title function_">success</span>(o.<span class="property">responseXML</span>);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">              <span class="title function_">success</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(o.<span class="property">responseText</span>)); </span><br><span class="line">          &#125; </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="title function_">error</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">complete</span>();</span><br><span class="line">        <span class="built_in">clearTimeout</span>(t);</span><br><span class="line">        t = <span class="literal">null</span>;</span><br><span class="line">        o = <span class="literal">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    o.<span class="title function_">open</span>(type, url, <span class="keyword">async</span>);</span><br><span class="line">    type === <span class="string">&#x27;POST&#x27;</span> &amp;&amp; o.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-type&#x27;</span>, <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line">    o.<span class="title function_">send</span>(type === <span class="string">&#x27;GET&#x27;</span> ? <span class="literal">null</span> : <span class="title function_">formatDatas</span>(data));</span><br><span class="line"></span><br><span class="line">    t = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      o.<span class="title function_">abort</span>();</span><br><span class="line">      <span class="built_in">clearTimeout</span>(t);</span><br><span class="line">      t = <span class="literal">null</span>;</span><br><span class="line">      o = <span class="literal">null</span>;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;本次请求已超时，API地址：&#x27;</span> + url);</span><br><span class="line">    &#125;, timeout);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">formatData</span>(<span class="params">obj</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">      str += key + <span class="string">&#x27;=&#x27;</span> + obj[key] + <span class="string">&#x27;&amp;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/&amp;$/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">randomNum</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)&#123;</span><br><span class="line">      num += <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">ajax</span>: <span class="keyword">function</span>(<span class="params">opt</span>)&#123;</span><br><span class="line">      <span class="title function_">_doAjax</span>(opt);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">post</span>: <span class="keyword">function</span>(<span class="params">url, data, dataType, successCB, errorCB, completeCB</span>)&#123;</span><br><span class="line">      <span class="title function_">_doAjax</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">data</span>: data,</span><br><span class="line">        <span class="attr">dataType</span>: dataType,</span><br><span class="line">        <span class="attr">success</span>: csuccessCB,</span><br><span class="line">        <span class="attr">error</span>: errorCB,</span><br><span class="line">        <span class="attr">complete</span>: completeCB</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">get</span>: <span class="keyword">function</span>(<span class="params">url, dataType, successCB, errorCB, completeCB</span>)&#123;</span><br><span class="line">      <span class="title function_">_doAjax</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">dataType</span>: dataType,</span><br><span class="line">        <span class="attr">success</span>: csuccessCB,</span><br><span class="line">        <span class="attr">error</span>: errorCB,</span><br><span class="line">        <span class="attr">complete</span>: completeCB</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><ul><li><strong>XMLHttpRequest标准又分为Level 1和Level 2</strong><ul><li>Level1<ul><li>无法发送跨域请求</li><li>无法发送非纯文本内容</li><li>无法获取传输进度</li></ul></li><li>Level2<ul><li>可以发送跨域请求</li><li>支持获取二进制数据（非纯文本数据）</li><li>支持上传文件</li><li>formData对象</li><li>可以获取传输进度</li><li>可以设置超时时间</li><li>但存在兼容性问题<ul><li>IE8/9/Opara Mini不支持xhr对象</li><li>IE10/11不支持响应类型为JSON</li><li>部分浏览器不支持超时设置</li><li>部分浏览器不持支blob（文件对象的二进制数据）</li></ul></li></ul></li></ul></li><li><strong>xhr.status/xhr.statusText：服务器回应的HTTP状态码/服务器发送的状态提示</strong><ul><li>200，OK，访问正常</li><li>301，Moved Permanently，永久移动</li><li>302，Move temporarily，暂时移动</li><li>304，Not Modified，未修改</li><li>307，Temporary Redirect，暂时重定向</li><li>401，Unauthorized，未授权</li><li>403，Forbidden，禁止访问</li><li>404，Not Found，未发现指定网址</li><li>500，Internal Server Error，服务器发生错误</li></ul></li><li><strong>xhr.onloadstart：绑定HTTP请求发出的监听函数</strong></li><li><strong>xhr.onerror：绑定请求失败的监听函数（修改封装的AJAX）</strong></li><li><strong>xhr.onload：绑定请求成功完成的监听函数</strong></li><li><strong>xhr.onabort：绑定请求中止（调用了abort（）方法）的监听函数</strong></li><li><strong>xhr.onloadend：绑定请求完成（不管成功与失败）的监听函数</strong></li></ul><p>防抖：n秒内触发一个事件，以最后一次触发为准</p><p>节流：n秒内只触发一次事件</p>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;XMLHttpRequest对象 | ActiveX对象&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Js引擎内置的构造函数&lt;/li&gt;
&lt;li&gt;var xhr = new XMLHttpRuquest()&lt;/li&gt;
&lt;li&gt;兼容性：IE5/IE6试用ActiveX对象&lt;/li&gt;
&lt;li&gt;var xhr = new ActiveXObject(‘Microsoft.XMLHTTP’)&lt;/li&gt;
&lt;li&gt;onreadystatechange事件：挂载到XMLHttpRequest对象上的事件&lt;/li&gt;
&lt;li&gt;readyState状态：通过XMLHttpRequest对象发送HTTP请求的各阶段状态码&lt;/li&gt;
&lt;li&gt;status：服务器响应的状态码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Ajax" scheme="http://example.com/categories/Ajax/"/>
    
    
    <category term="Ajax" scheme="http://example.com/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>网络</title>
    <link href="http://example.com/2023/04/03/%E7%BD%91%E7%BB%9C/"/>
    <id>http://example.com/2023/04/03/%E7%BD%91%E7%BB%9C/</id>
    <published>2023-04-03T07:39:47.000Z</published>
    <updated>2023-04-10T13:49:25.839Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="URI：Uniform-Resource-Identifier">URI：Uniform Resource Identifier</h4></li><li><p>统一资源标识符，用来唯一的标识一个资源</p></li><li><h4 id="URL：Uniform-Resource-Locator">URL：Uniform Resource Locator</h4><ul><li>统一资源定位符，URL可以用来表示一个资源，而且还指明了如何定位这个资源</li></ul></li><li><h4 id="URN：Uniform-Resource-Name">URN：Uniform Resource Name</h4><ul><li>统一资源命名，通过名字来表示资源</li></ul></li></ul><span id="more"></span><p><strong>URL肯定是一个URI,URI并不一定是URL,也有可能是URN</strong></p><ul><li><p>http默认端口号80、https默认端口号443、MySQL默认端口号3306</p></li><li><h4 id="C-S架构">C/S架构</h4><ul><li>Client/Sever</li><li>界面与操作丰富、安全性高、响应速度快</li><li>通常用于局域网，需要安装特定应用程序或使用特定硬件、维护成本高</li></ul></li><li><h4 id="B-S架构">B/S架构</h4><ul><li>Browser/Server</li><li>无需安装客户端程序与特定硬件</li><li>跨浏览器兼容性差、功能性相对较弱、设计成本高、安全性弱、交互性弱</li></ul></li><li><h4 id="DNS：Domain-Name-Server（域名服务器）">DNS：Domain Name Server（域名服务器）</h4><ul><li>把域名转换成对应的ip地址</li><li>一个域名对应一个IP地址，但一个IP地址可以对应多个域名</li><li>gTLD：generic Top-Level DNS Server 顶级域名服务器 | <a href="http://xn--3svy77e.com">解析.com</a>、.net</li></ul></li><li><h4 id="IP">IP</h4><ul><li>Internet Protocol Address</li><li>互联网协议地址、IP地址</li><li>分配给用户上网使用的互联网协议</li><li>IPv4 | 192.168.0.1（长度32位（四个字节），十进制表示）</li><li>IPv6 | 地址空间更大（8组（128位），十六进制 0-9-A-F）<ul><li>更高的安全性</li><li>路由表更小</li><li>自动配置支持</li></ul></li></ul></li><li><h4 id="TCP"><strong>TCP</strong></h4><ul><li>Transmission Control Protocol 传输控制协议</li><li>三次握手</li><li><strong>面向连接（收发数据前，必须建立可靠的链接）</strong></li><li>**优点：**稳定、重传机制、拥塞控制机制、断开链接</li><li>**缺点：**速度慢、效率低、占用资源、容易被攻击（三次握手-&gt;DOS、DDOS攻击）</li><li>TCP/IP协议组：提供点对点的连接机制，制定了数据封装、定址、传输、路由、数据接受的标准</li></ul></li><li><h4 id="UDP"><strong>UDP</strong></h4><ul><li>User Data Protocol 用户数据报协议</li><li>面向无连接（不可靠的协议，无状态传输机制）</li><li>无连接信息发送机制</li><li>无需确保通讯质量且要求速度快、无需确保信息完整</li><li>消息收发、语音通话、直播</li><li>**优点：**安全、快速、漏洞少（UDP flood攻击）</li><li>**缺点：**不可靠、不稳定、容易丢包</li><li>只要目的源地址、端口号、发送方地址、发送方端口号确定，则可以直接发送信息报文，但不能保证一定能收到或收到完整的数据</li></ul></li><li><h4 id="HTTP"><strong>HTTP</strong></h4><ul><li>Hyper Text Transfer Protocol 超文本传输协议</li><li>定义：客户端和服务器端请求和应答的标准，用于从WEB服务器传输超文本到本地浏览器的传输协议</li><li>HTTP请求：按照协议规则先向WEB服务器发送的超文本传输到本地浏览器的请求</li><li>HTTP是不安全的（监听和中间人攻击等手段，获取网站账户信息和敏感信息）</li><li>HTTP协议的传输内容都是明文，直接在TCP连接上运行，客户端和服务器都无法验证对方身份</li></ul></li><li><h4 id="HTTPS">HTTPS</h4><ul><li>Hyper Text Transfer Protocol Secure 超文本传输安全协议</li><li>HTTP的安全版（安全基础是SSL/TLS）</li><li>SSL：Secure Sockets Layer 安全套接层</li><li>TLS：Transport Layer Security 传输层安全</li><li>为网络通信提供安全及数据完整性的一种安全协议，对网络连接进行加密</li><li>HTTPS可防止被攻击</li><li>HTTPS协议的传输内容都是被SSL/TLS加密，且运行在SSL/TLS上，SSL/TLS运行在TCP连接上，所以数据传输是安全的</li></ul></li><li><h4 id="建立TCP连接">建立TCP连接</h4><ul><li>标志位：数据包</li><li>SYN：Synchronize Sequence Numbers 同步序列编号</li><li>ACK：Acknowledgement 确认字符</li><li>状态<ul><li>LISTEN：侦听TCP端口的连接请求</li><li>SYN-SENT：在发送连接请求后等待匹配的连接请求</li><li>SYN-RECEIVED：在收到和发送一个请求后等待对连接请求的确认</li><li>ESTABLISHED：代表一个打开的连接，数据可以传送给用户</li></ul></li><li>**第一次握手：**客户端向服务器发送SYN标志位（序号是J），并进入SYN_SEND状态（等待服务器确认状态）</li><li>**第二次握手：**服务器收到来自客户端的SYNJ，服务端会确认该数据包已收到并发送ACK标志位（序号是J+1）和SYN标志位（序号是K），服务器进入SYN_RECV（请求接收并等待客户端确认状态）</li><li>**第三次握手：**客户端进入连接建立状态后，向服务器发送ACK标志位（序号是K+1）确认客户端已收到建立连接确认，服务器收到ACK标志位后，服务端进入连接已建立状态</li></ul></li></ul><img src='../img/tcp.jpg'/><ul><li><h4 id="HTTP报文">HTTP报文</h4><ul><li><strong>HTTP基于TCP/IP通信协议来传递数据</strong></li><li><strong>HTTP基于客户端/服务端（C/S）架构模型</strong></li><li>通过一个可靠的连接来交换信息，是一个无状态的请求/响应协议</li><li>限制每次连接只能处理一个请求，服务端处理完客户的请求，并受到客户的应答后，即断开连接，节省传输时间</li><li>客户端以及服务器制定使用合适的MIME-type内容类型</li><li>Multipurpose Internet Mail Extensions type 多用途互联网邮件扩展类型</li></ul></li><li><h4 id="HTTP报文-请求方式">HTTP报文-请求方式</h4><ul><li>put：上传资源，form表单不支持、提交即存储的原则（无验证机制，安全漏洞）、需配置服务器支持put方式转发给后端操作</li><li>delelte：删除资源，form表单不支持、提交即删除的原则（无验证机制，安全漏洞）、需配置服务器支持put方式转发给后端操作</li><li>post：修改资源</li><li>get：修改资源</li><li>更好语义化请求目的</li></ul></li><li><h4 id="POST请求">POST请求</h4><ul><li><strong>POST更安全，不会作为url的一部分，不会被缓存，不保存在服务器日志喝浏览器记录中</strong></li><li><strong>POST发送的数据量更大，（GET有url长度限制）、</strong></li><li><strong>POST能发送更多的数据类型（各种类型的文件）、GET只能发送ASCII字符</strong></li><li><strong>POST比GET速度慢</strong><ul><li><strong>POST请求包含更多请求头</strong></li><li><strong>POST接收数据之前会先将请求头发送给服务器确认，然后发送数据</strong><ul><li><strong>POST过程</strong></li><li>第三次握手，<strong>浏览器确认并发送post请求头 request header</strong></li><li>服务器返回状态码100后，continue响应</li><li>浏览器开始发送Form Data数据</li><li>服务器返回200 OK响应</li><li><strong>GET过程</strong></li><li>第三次握手，<strong>浏览器确认并发送请求头和数据</strong></li><li>服务器返回200 OK响应</li><li><strong>GET会进行数据缓存，POST不会</strong></li><li><strong>POST不能进行管道化传输</strong></li></ul></li></ul></li></ul></li><li><h4 id="HTTP报文-状态码">HTTP报文-状态码</h4><ul><li>1xx：信息，服务器收到请求，需要请求者继续执行操作</li><li>2xx：成功，操作被成功接收并处理</li><li>3xx：重定向，需要进一步的操作以完成请求</li><li>4xx：客户端错误，请求包含语法错误或无法完成请求</li><li>5xx：服务器错误，服务器在处理请求的过程中发生了错误</li></ul></li><li><h4 id="浏览器缓存">浏览器缓存</h4><ul><li>减少网络带宽的消耗</li><li>降低服务器压力</li><li>减少网络延迟</li><li>Pragma:no-cache（忽略缓存）</li><li><strong>Cache-Contro</strong>l 缓存控制<ul><li>no-cache：指示浏览器忽略资源缓存副本，强制到服务器获取资源（浏览器依然缓存）</li><li>no-store：强制缓存在任何情况下都不要保留任何副本</li><li>max-age=31536000：指示缓存副本的有效时长，从请求时间开始到过期时间之间的秒数</li><li>public：表明响应可以被任何对象（包括：发送请求的客户端，代理服务器，等等）缓存</li><li>private：表明响应只能被单个用户缓存，不能作为共享缓存（即代理服务器不能缓存它）</li></ul></li><li>Expires：启用缓存和定义缓存时间，告诉浏览器资源缓存过期时间（格林威治时间 东加西减）</li></ul></li></ul><img src="../img/image-20230402222150337.png"/><ul><li><p>Connection:keep-alive 长连接开启 | close</p></li><li><p>Content-Length：用于描述HTTP消息实体的传输长度</p></li><li><p>Referer：来源域名</p></li><li><h4 id="关闭TCP连接">关闭TCP连接</h4><ul><li>客户端发送连接关闭报文（此时已停止发送数据）（第一次挥手）<ul><li>报文首部：FIN=1（序列号seq=u）</li><li>此刻：客户端进入终止等待（FIN-WAIT-1）状态</li></ul></li><li>服务器收到连接关闭报文，并发送确认报文（第二次挥手）<ul><li>报文首部：ACK=1 ack = u+1（确认FIN）（序列号seq=v）</li><li>此刻：服务端进入关闭等待（CLOSE-WAIT）状态<ul><li>连接半关闭状态，客户端没有数据要发送，但服务器如果还要发送数据，客户端依然需要接收</li></ul></li></ul></li><li>客户端收到服务器的确认请求后，客户端进入终止等待2（FIN-WAIT-2）状态<ul><li>服务器在这期间还要确认客户端所需要的数据是否真的发送完毕了，如果还没发送完毕，则继续发送数据</li></ul></li><li>服务器确认数据已发送完毕后，向客户端发送连接关闭报文（第三次挥手），服务器进入最后确认（LAST-ACK）状态<ul><li>报文首部：FIN=1 ACK=1 ack = u+1（确认上一次数据包）序列号seq=w</li></ul></li><li>客户端收到服务器的连接关闭报文后，发出接收确认报文（第四次挥手），客户端进入时间等待（TIME-WAIT）状态<ul><li>报文首部：ACK=1 ack = w+1（确认上一次数据包）序列号seq = u+1</li></ul></li><li>服务端收到客户端发出的确认，立即进入TCP关闭状态（CLOSE），TCP连接结束（TCP关闭，服务端要比客户端早一些）<ul><li>TIME-WAIT时长：2MSL Maximum Segment Lifetime 最大报文生存时间</li></ul></li></ul></li></ul><img src="../img/tcp4.png"/><ul><li><h4 id="同源策略">同源策略</h4><ul><li>相同的协议&amp;相同的域名&amp;相同的端口</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&quot;URI：Uniform-Resource-Identifier&quot;&gt;URI：Uniform Resource Identifier&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;统一资源标识符，用来唯一的标识一个资源&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&quot;URL：Uniform-Resource-Locator&quot;&gt;URL：Uniform Resource Locator&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;统一资源定位符，URL可以用来表示一个资源，而且还指明了如何定位这个资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&quot;URN：Uniform-Resource-Name&quot;&gt;URN：Uniform Resource Name&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;统一资源命名，通过名字来表示资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="NetWork" scheme="http://example.com/categories/NetWork/"/>
    
    
    <category term="NetWork" scheme="http://example.com/tags/NetWork/"/>
    
  </entry>
  
  <entry>
    <title>归类函数、扁平化数组</title>
    <link href="http://example.com/2023/03/30/%E5%BD%92%E7%B1%BB%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2023/03/30/%E5%BD%92%E7%B1%BB%E5%87%BD%E6%95%B0/</id>
    <published>2023-03-30T13:18:30.000Z</published>
    <updated>2023-03-30T13:19:41.635Z</updated>
    
    <content type="html"><![CDATA[<ul><li>归类函数</li></ul><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Array</span>&#125; sort </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Array</span>&#125; data </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; foreign_key 分类key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">String</span>&#125; sortType single | multi  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">sortData</span>(<span class="params">sort, data</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> cache = &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">foreign_key, sortType</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (sortType !== <span class="string">&#x27;single&#x27;</span> &amp;&amp; sortType !== <span class="string">&#x27;multi&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid sort type.[Only &quot;single&quot; and &quot;multi&quot; are valid values]&#x27;</span>));</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    sort.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">sort</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> _id = sort.<span class="property">id</span></span><br><span class="line">      cache[_id] = []</span><br><span class="line">      data.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">elem</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> foreign_val = elem[foreign_key]</span><br><span class="line">        <span class="keyword">switch</span> (sortType) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">&quot;single&quot;</span>:</span><br><span class="line">            <span class="keyword">if</span> (foreign_val == _id) &#123;</span><br><span class="line">              cache[_id].<span class="title function_">push</span>(elem)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">&#x27;multi&#x27;</span>:</span><br><span class="line">            <span class="keyword">var</span> _arr = foreign_val.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">            _arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">val</span>) &#123;</span><br><span class="line">              <span class="keyword">if</span> (val == _id) &#123;</span><br><span class="line">                cache[_id].<span class="title function_">push</span>(elem)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="attr">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> cache</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>扁平化数组<ul><li>四种方法</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">function</span> <span class="title function_">flatten1</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> _arr = arr || [],</span><br><span class="line">    fArr = [],</span><br><span class="line">    len = _arr.<span class="property">length</span>,</span><br><span class="line">    item;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    item = _arr[i]</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">_isArr</span>(item)) &#123;</span><br><span class="line">      fArr = fArr.<span class="title function_">concat</span>(<span class="title function_">flatten</span>(item))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fArr.<span class="title function_">push</span>(item)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fArr</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">_isArr</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(obj) === <span class="string">&#x27;[Object Array]&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">flatten2</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> _arr = arr || [],</span><br><span class="line">    toStr = &#123;&#125;.<span class="property">toString</span>,</span><br><span class="line">    fArr = [];</span><br><span class="line"></span><br><span class="line">  _arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">elem</span>) &#123;</span><br><span class="line">    toStr.<span class="title function_">call</span>(elem) === <span class="string">&#x27;[Object Array]&#x27;</span></span><br><span class="line">      ? fArr = fArr.<span class="title function_">concat</span>(<span class="title function_">flatten2</span>())</span><br><span class="line">      : fArr.<span class="title function_">push</span>(elem)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> fArr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">flatten3</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> _arr = arr || [],</span><br><span class="line">    toStr = &#123;&#125;.<span class="property">toString</span>,</span><br><span class="line">    fArr = [];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> _arr.<span class="title function_">reduce</span>(<span class="keyword">function</span> (<span class="params">prev, elem</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> prev.<span class="property">concat</span> = toStr.<span class="title function_">call</span>(elem) === <span class="string">&#x27;[Object Array]&#x27;</span></span><br><span class="line">      ? <span class="title function_">flatten3</span>(elem)</span><br><span class="line">      : elem</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">flatten4</span> = arr =&gt;</span><br><span class="line">  arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">prev, elem</span>) =&gt;</span> prev.<span class="title function_">concat</span>(</span><br><span class="line">    &#123;&#125;.<span class="title function_">toString</span>().<span class="title function_">call</span>(elem) === <span class="string">&#x27;[Object Array]&#x27;</span></span><br><span class="line">      ? <span class="title function_">flatten4</span>(elem)</span><br><span class="line">      : elem</span><br><span class="line">  ), [])</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;归类函数&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Function" scheme="http://example.com/categories/Function/"/>
    
    
    <category term="Function" scheme="http://example.com/tags/Function/"/>
    
  </entry>
  
  <entry>
    <title>函数防抖、函数节流</title>
    <link href="http://example.com/2023/03/30/%E5%87%BD%E6%95%B0%E9%98%B2%E6%8A%96%E3%80%81%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81/"/>
    <id>http://example.com/2023/03/30/%E5%87%BD%E6%95%B0%E9%98%B2%E6%8A%96%E3%80%81%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81/</id>
    <published>2023-03-30T03:16:09.000Z</published>
    <updated>2023-03-30T03:16:51.702Z</updated>
    
    <content type="html"><![CDATA[<ul><li>函数防抖<ul><li>触发事件在n秒后才执行函数，如果在n秒内又触发了事件，则会重新计算函数执行</li></ul></li></ul><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; fn 回调</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Number</span>&#125; delay 延迟时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Boolean</span>&#125; immediate 是否首次延迟执行、n秒内频繁触发事件,计时器会频繁重新开始计时</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fn, delay, immediate</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> timer = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> debounced = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _self = <span class="variable language_">this</span>,</span><br><span class="line">      args = <span class="variable language_">arguments</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">      <span class="keyword">var</span> exec = !timer</span><br><span class="line"></span><br><span class="line">      timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        timer = <span class="literal">null</span></span><br><span class="line">      &#125;, delay);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (exec) &#123;</span><br><span class="line">        fn.<span class="title function_">apply</span>(_self, args)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        fn.<span class="title function_">apply</span>(_self, args)</span><br><span class="line">      &#125;, delay);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  debounced.<span class="property">remove</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">    timer = <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> debounced</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>函数节流<ul><li>在n秒内，触发事件，只执行一次事件处理函数</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; fn 回调</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Number</span>&#125; delay 延迟时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn, delay</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> timer = <span class="literal">null</span>,</span><br><span class="line">    begin = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _self = <span class="variable language_">this</span>,</span><br><span class="line">      args = <span class="variable language_">arguments</span>,</span><br><span class="line">      cur = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (cur - begin &gt; delay) &#123;</span><br><span class="line">      fn.<span class="title function_">apply</span>(_self, args)</span><br><span class="line">      begin = cur</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        fn.<span class="title function_">apply</span>(_self, args)</span><br><span class="line">      &#125;, delay);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;函数防抖
&lt;ul&gt;
&lt;li&gt;触发事件在n秒后才执行函数，如果在n秒内又触发了事件，则会重新计算函数执行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Function" scheme="http://example.com/categories/Function/"/>
    
    
    <category term="Function" scheme="http://example.com/tags/Function/"/>
    
  </entry>
  
  <entry>
    <title>函数柯里化、偏函数、惰性函数</title>
    <link href="http://example.com/2023/03/30/%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96/"/>
    <id>http://example.com/2023/03/30/%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96/</id>
    <published>2023-03-30T01:25:40.000Z</published>
    <updated>2023-03-30T01:27:03.167Z</updated>
    
    <content type="html"><![CDATA[<ul><li>柯里化：将n元函数转换成n个一元函数 | 将一个多参数的函数转成多个单参数的函数</li></ul><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a, b, c, d</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b + c + d</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">curry</span>(<span class="params">fn, len</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> len = len || fn.<span class="property">length</span></span><br><span class="line">    <span class="keyword">var</span> func = <span class="keyword">function</span> (<span class="params">fn</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> _arg = [].<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>, <span class="number">1</span>)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;_arg: &#x27;</span>, _arg);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> newArgs = _arg.<span class="title function_">concat</span>([].<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>))</span><br><span class="line">        <span class="keyword">return</span> fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>, newArgs)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 单次参数传入个数</span></span><br><span class="line">      <span class="keyword">var</span> argLen = <span class="variable language_">arguments</span>.<span class="property">length</span></span><br><span class="line">      <span class="comment">// 是否满足柯里化参数要求，不满足继续递归柯里化</span></span><br><span class="line">      <span class="keyword">if</span> (argLen &lt; len) &#123;</span><br><span class="line">        <span class="keyword">var</span> formateArr = [fn].<span class="title function_">concat</span>([].<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">curry</span>(func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, formateArr), len - argLen)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 满足参数要求情况下最后执行</span></span><br><span class="line">        <span class="keyword">return</span> fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> add2 = <span class="title function_">curry</span>(add)</span><br><span class="line">  <span class="keyword">var</span> res = <span class="title function_">add2</span>(<span class="number">1</span>)(<span class="number">2</span>)(<span class="number">3</span>)(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><ul><li>偏函数：将n元函数转换成n-x元参数 | 固定一个函数的一个或多个参数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">partial</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> _self = <span class="variable language_">this</span>,</span><br><span class="line">        _args = [].<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> newArgs = _args.<span class="title function_">concat</span>([].<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>))</span><br><span class="line">        <span class="keyword">return</span> _self.<span class="title function_">apply</span>(<span class="variable language_">this</span>,newArgs)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>惰性函数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> getTimeStamp = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> timeStamp = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()</span><br><span class="line">    </span><br><span class="line">    getTimeStamp = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> timeStamp</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">getTimeStamp</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getTimeStamp</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getTimeStamp</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getTimeStamp</span>())</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">val</span>)&#123;</span><br><span class="line">    <span class="keyword">switch</span>(val)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            test = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;惰性函数1&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            test = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;惰性函数2&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            test = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;惰性函数3&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">test</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">test</span>(<span class="number">1</span>)</span><br><span class="line"><span class="title function_">test</span>(<span class="number">2</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;柯里化：将n元函数转换成n个一元函数 | 将一个多参数的函数转成多个单参数的函数&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Function" scheme="http://example.com/categories/Function/"/>
    
    
    <category term="Function" scheme="http://example.com/tags/Function/"/>
    
  </entry>
  
  <entry>
    <title>webpack.config.js</title>
    <link href="http://example.com/2023/03/29/webpack-config-js/"/>
    <id>http://example.com/2023/03/29/webpack-config-js/</id>
    <published>2023-03-29T07:57:25.000Z</published>
    <updated>2023-03-29T07:58:15.147Z</updated>
    
    <content type="html"><![CDATA[<p><strong>webpack.config.js</strong></p><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">    <span class="attr">entry</span>: &#123;</span><br><span class="line">        <span class="attr">index</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">        <span class="attr">print</span>: <span class="string">&#x27;./src/print.js&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">devtool</span>: <span class="string">&#x27;inline-source-map&#x27;</span>,  <span class="comment">// 追踪错误 开发环境 eval-cheap-module-source-map  最佳选择</span></span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&quot;[name].bundle.js&quot;</span>,</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>), <span class="comment">// __dirname 当前文件所在的目录</span></span><br><span class="line">        <span class="attr">clean</span>: <span class="literal">true</span> <span class="comment">//枸构建前清理文件</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;Development&#x27;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> webpack.<span class="title class_">ProvidePlugin</span>(&#123;</span><br><span class="line">            <span class="attr">_</span>: <span class="string">&#x27;lodash&#x27;</span>,  <span class="comment">// 遇到_ 时，引入lodash package</span></span><br><span class="line">            <span class="attr">join</span>: [<span class="string">&#x27;lodash&#x27;</span>, <span class="string">&#x27;join&#x27;</span>], <span class="comment">// join  模块单个导出</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">optimization</span>: &#123;</span><br><span class="line">        <span class="attr">runtimeChunk</span>: <span class="string">&#x27;single&#x27;</span>,</span><br><span class="line">        <span class="attr">splitChunks</span>: &#123;</span><br><span class="line">            <span class="attr">chunks</span>: <span class="string">&quot;all&quot;</span> <span class="comment">// 去除重复的引入模块</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>package.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack-demo&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;watch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack --watch&quot;</span><span class="punctuation">,</span> <span class="comment">// 观察模式</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack server --open&quot;</span><span class="punctuation">,</span> <span class="comment">// webpack-dev-server 实时重新加载</span></span><br><span class="line">    <span class="attr">&quot;serve&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node server.js&quot;</span><span class="punctuation">,</span>  <span class="comment">//  webpack-dev-middleware 中间件</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;css-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.7.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;csv-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.5.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;json5&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.2.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;style-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;toml&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.75.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;xml-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;yamljs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;lodash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.17.21&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>模块标记为ESM</strong></p><p>在package.json目录下</p><ul><li>type:‘module’  使用ECMAScript模块</li><li>type:‘commonjs’  使用CommonJS模块</li></ul><p><strong>预获取</strong></p><ul><li>prefetch<ul><li><code>import(/* webpackPrefetch: true */)</code></li><li>只要父 chunk 完成加载，webpack 就会添加 prefetch hint(预取提示)</li><li>在父chunk加载结束后，再开始加载</li><li>闲置下载</li><li>未来时刻</li></ul></li></ul><p><strong>预加载</strong></p><ul><li>preload module<ul><li>在父chunk加载的时候，并行加载</li><li>立即下载</li><li>立即请求、当下时刻</li></ul></li></ul><p><strong>Webpack构建流程</strong></p><ul><li>初始化：启动构建，读取并合并配置参数，加载plugin，实例化Complier</li><li>编译：从Entry出发，针对每个Module串行调用对应的Loader去翻译文件的内容，再找到该Module依赖的Module，递归编译</li><li>输出：将编译后的Modue组成成Chunk,将Chunk转换成文件，输出到文件系统</li></ul><p><strong>文件指纹</strong></p><ul><li>Hash：整个构建项目的hash，文件有修改，整个项目的hash值就会更改</li><li>ChunkHash：Webpack打包的Chunk，不同的entry会生出不同的chunkhash</li><li>contenthash：依据文件内容，文件内容不变，contenthash不变</li></ul><p><strong>require.context</strong></p><ul><li>实现工程自动化（遍历文件夹的文件，从中获取指定文件，自动导入模块）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 遍历获取 api 目录下所有的 js 文件（包括子目录）</span></span><br><span class="line"><span class="built_in">require</span>.<span class="title function_">context</span>(<span class="string">&#x27;@/api&#x27;</span> , <span class="literal">true</span>, <span class="regexp">/(.js$)/</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;webpack.config.js&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Webpack" scheme="http://example.com/categories/Webpack/"/>
    
    
    <category term="Webpack" scheme="http://example.com/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>keep-alive多级嵌套路由</title>
    <link href="http://example.com/2023/03/29/keep-alive%E5%A4%9A%E7%BA%A7%E5%B5%8C%E5%A5%97%E8%B7%AF%E7%94%B1/"/>
    <id>http://example.com/2023/03/29/keep-alive%E5%A4%9A%E7%BA%A7%E5%B5%8C%E5%A5%97%E8%B7%AF%E7%94%B1/</id>
    <published>2023-03-29T07:54:44.000Z</published>
    <updated>2023-03-29T07:56:03.358Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="title function_">handleKeepAlive</span>(to)</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 递归处理多余的 layout : &lt;router-view&gt;，</span></span><br><span class="line"><span class="comment"> * 让需要访问的组件保持在第一层 index : &lt;router-view&gt; 之下</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">to</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleKeepAlive</span> (to) &#123;</span><br><span class="line">  <span class="keyword">if</span> (to.<span class="property">matched</span> &amp;&amp; to.<span class="property">matched</span>.<span class="property">length</span> &gt; <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; to.<span class="property">matched</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> element = to.<span class="property">matched</span>[i]</span><br><span class="line">      <span class="keyword">if</span> (element.<span class="property">components</span>.<span class="property">default</span>.<span class="property">name</span> === <span class="string">&#x27;layout&#x27;</span>) &#123;</span><br><span class="line">        to.<span class="property">matched</span>.<span class="title function_">splice</span>(i, <span class="number">1</span>)</span><br><span class="line">        <span class="title function_">handleKeepAlive</span>(to)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方法二：兼容&lt;layout&gt;按需加载</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">to</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleKeepAlive</span> (to) &#123;</span><br><span class="line">  <span class="keyword">if</span> (to.<span class="property">matched</span> &amp;&amp; to.<span class="property">matched</span>.<span class="property">length</span> &gt; <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; to.<span class="property">matched</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> element = to.<span class="property">matched</span>[i]</span><br><span class="line">      <span class="keyword">if</span> (element.<span class="property">components</span>.<span class="property">default</span>.<span class="property">name</span> === <span class="string">&#x27;layout&#x27;</span>) &#123;</span><br><span class="line">        to.<span class="property">matched</span>.<span class="title function_">splice</span>(i, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">handleKeepAlive</span>(to)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 如果没有按需加载完成则等待加载</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> element.<span class="property">components</span>.<span class="property">default</span> === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">await</span> element.<span class="property">components</span>.<span class="title function_">default</span>()</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">handleKeepAlive</span>(to)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;router.&lt;span class=&quot;title function_&quot;&gt;beforeEach&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;to, &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;, next&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;title function_&quot;&gt;handleKeepAlive&lt;/span&gt;(to)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 递归处理多余的 layout : &amp;lt;router-view&amp;gt;，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 让需要访问的组件保持在第一层 index : &amp;lt;router-view&amp;gt; 之下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;to&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title function_&quot;&gt;handleKeepAlive&lt;/span&gt; (to) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (to.&lt;span class=&quot;property&quot;&gt;matched&lt;/span&gt; &amp;amp;&amp;amp; to.&lt;span class=&quot;property&quot;&gt;matched&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; to.&lt;span class=&quot;property&quot;&gt;matched&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;length&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; element = to.&lt;span class=&quot;property&quot;&gt;matched&lt;/span&gt;[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (element.&lt;span class=&quot;property&quot;&gt;components&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;default&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;name&lt;/span&gt; === &lt;span class=&quot;string&quot;&gt;&amp;#x27;layout&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        to.&lt;span class=&quot;property&quot;&gt;matched&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;splice&lt;/span&gt;(i, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title function_&quot;&gt;handleKeepAlive&lt;/span&gt;(to)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Components" scheme="http://example.com/categories/Components/"/>
    
    
    <category term="Components" scheme="http://example.com/tags/Components/"/>
    
  </entry>
  
  <entry>
    <title>ODF格式在线预览</title>
    <link href="http://example.com/2023/03/29/ODF%E6%A0%BC%E5%BC%8F%E5%9C%A8%E7%BA%BF%E9%A2%84%E8%A7%88/"/>
    <id>http://example.com/2023/03/29/ODF%E6%A0%BC%E5%BC%8F%E5%9C%A8%E7%BA%BF%E9%A2%84%E8%A7%88/</id>
    <published>2023-03-29T07:49:39.000Z</published>
    <updated>2023-03-29T07:52:44.278Z</updated>
    
    <content type="html"><![CDATA[<ul><li>安装依赖: npm i odf.js</li><li>vue文件直接使用</li></ul><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display:flex;justify-content: center;&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;certificateWrapper&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; parseOfdDocument, renderOfd &#125; <span class="keyword">from</span> <span class="string">&#x27;ofd.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取电子证照</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getPersonLicenseFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getPersonLicenseFileApi</span>(&#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">certificateIdentifier</span>:props.<span class="property">rowData</span>.<span class="property">certificateIdentifier</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">if</span> (res?.<span class="property">data</span>) &#123;</span><br><span class="line">    <span class="title function_">parseOfdDocument</span>(&#123;</span><br><span class="line">      <span class="comment">// ofd写入文件地址</span></span><br><span class="line">      <span class="attr">ofd</span>: <span class="string">`data:image/<span class="subst">$&#123;res?.data?.fileFormat&#125;</span>;base64,<span class="subst">$&#123;res?.data.content&#125;</span>`</span>,</span><br><span class="line">      <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">        <span class="comment">// 输出ofd每页的div</span></span><br><span class="line">        <span class="keyword">const</span> screenWidth = <span class="number">350</span></span><br><span class="line">        <span class="keyword">const</span> contentObj = <span class="title function_">renderOfd</span>(screenWidth, res[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">const</span> <span class="attr">contentDiv</span>: any = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;certificateWrapper&#x27;</span>)</span><br><span class="line">        contentDiv.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> div <span class="keyword">of</span> contentObj) &#123;</span><br><span class="line">          contentDiv.<span class="title function_">appendChild</span>(div)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">fail</span>(<span class="params">error</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    root.<span class="property">$message</span>.<span class="title function_">warning</span>(<span class="string">&#x27;尚未生成电子证书，请稍后再试&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  loading.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;安装依赖: npm i odf.js&lt;/li&gt;
&lt;li&gt;vue文件直接使用&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Components" scheme="http://example.com/categories/Components/"/>
    
    
    <category term="Components" scheme="http://example.com/tags/Components/"/>
    
  </entry>
  
</feed>
